{"title":"Linux常用信号","slug":"Linux常用信号","date":"2018-03-15T03:43:58.000Z","updated":"2018-03-16T04:05:25.000Z","comments":true,"path":"api/articles/Linux常用信号.json","photos":[],"link":"","excerpt":null,"covers":["/images/kill.png"],"content":"<h2 id=\"常用Linux信号\"><a href=\"#常用Linux信号\" class=\"headerlink\" title=\"常用Linux信号\"></a>常用Linux信号</h2><p><img src=\"/images/kill.png\" alt=\"\"></p>\n<blockquote>\n<p>Linux系统下有很多信号，按照可靠性可以分为可靠信号和非可靠信号，按时间分为实时信号和非实时信号。</p>\n</blockquote>\n<p>Linux有三种方式来处理收到的信号：</p>\n<ul>\n<li>忽略信号：即对信号不作处理（除了SIGKILL和SIGSTOP）</li>\n<li>捕捉信号：定义信号处理函数，当信号发生时，执行相应的处理函数</li>\n<li>执行缺省操作，Linux对每种信号都规定了默认操作</li>\n</ul>\n<p>常用信号如下：</p>\n<ol>\n<li><strong><font color=\"#DC143C\">SIGHUP</font></strong> 和控制台操作相关，当控制台被关闭的时候系统会向拥有控制台sessionID的进程发送HUP信号，默认HUP信号执行的action是exit,如果远程登启动某个服务进程，并在程序运行时关闭某个链接的会话导致服务进程退出，所以服务程序一般都会用nohup工具启动（该命令就是让系统忽略该信号），或者写一个daemon<a href=\"\">守护进程</a>(利用setsid进行)。</li>\n<li><strong><font color=\"#DC143C\">SIGINT</font></strong> 终止进程，通常我们的ctrl+c就发送这个消息</li>\n<li><strong><font color=\"#DC143C\">SIGQUIT</font></strong> 和SIGINT类似, 但由QUIT字符(通常是Ctrl- / )来控制. 进程收到该消息退出时会产生core文件。</li>\n<li><strong><font color=\"#DC143C\">SIGKILL</font></strong> 消息编号为9，我们经常用kill -9来杀死进程,发送的就是这个消息，程序收到这个消息立即终止，这个消息不能被捕获，封锁或忽略，所以是杀死进程的终极武器。</li>\n<li><strong><font color=\"#DC143C\">SIGTERM</font></strong> 不带参数时kill默认发送的信号，默认是杀死进程</li>\n<li><strong><font color=\"#DC143C\">SIGSTOP</font></strong> 停止进程的执行，同SIGKILL一样不可以被应用程序所处理，注意它和terminate以及interrupt的区别:该进程还未结束, 只是暂停执行</li>\n</ol>\n","categories":[{"name":"面试","slug":"面试","count":36,"path":"api/categories/面试.json"}],"tags":[{"name":"linux","slug":"linux","count":7,"path":"api/tags/linux.json"}]}