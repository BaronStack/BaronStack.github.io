{"title":"C++面试问题准备：实现String类","slug":"C-面试问题准备-实现String类","date":"2018-03-13T10:04:21.000Z","updated":"2018-03-13T10:50:11.000Z","comments":true,"path":"api/articles/C-面试问题准备-实现String类.json","photos":[],"link":"","excerpt":"String 类原型如下：1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>class String<br>&#123; <br> public: <br> String(const char *str = NULL); // 普通构造函数 <br> String(const String &amp;other); // 拷贝构造函数 <br> ~ String(void); // 析构函数 <br> String &amp; operator =(const String &amp;other); // 赋值函数 <br> private: <br> char *m_data; // 用于保存字符串 <br>&#125;;<br>","covers":null,"content":"<h2 id=\"String-类\"><a href=\"#String-类\" class=\"headerlink\" title=\"String 类\"></a>String 类</h2><p>原型如下：</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class <span class=\"keyword\">String</span></span><br><span class=\"line\">&#123; </span><br><span class=\"line\"> <span class=\"keyword\">public</span>: </span><br><span class=\"line\"> <span class=\"keyword\">String</span>(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *str = NULL); <span class=\"comment\">// 普通构造函数 </span></span><br><span class=\"line\"> <span class=\"keyword\">String</span>(<span class=\"keyword\">const</span> <span class=\"keyword\">String</span> &amp;other); <span class=\"comment\">// 拷贝构造函数 </span></span><br><span class=\"line\"> ~ <span class=\"keyword\">String</span>(<span class=\"keyword\">void</span>); <span class=\"comment\">// 析构函数 </span></span><br><span class=\"line\"> <span class=\"keyword\">String</span> &amp; <span class=\"keyword\">operator</span> =(<span class=\"keyword\">const</span> <span class=\"keyword\">String</span> &amp;other); <span class=\"comment\">// 赋值函数 </span></span><br><span class=\"line\"> <span class=\"keyword\">private</span>: </span><br><span class=\"line\"> <span class=\"keyword\">char</span> *m_data; <span class=\"comment\">// 用于保存字符串 </span></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>具体实现:</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String::String(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * str) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (str == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        m_data = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (m_data == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">            <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">\"内存分配失败\"</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br><span class=\"line\">        *m_data = <span class=\"string\">'\\0'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> len = <span class=\"built_in\">strlen</span>(str);</span><br><span class=\"line\">        m_data = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[len + <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"comment\">//同样可以加分配失败的处理</span></span><br><span class=\"line\">        <span class=\"built_in\">strcpy</span>(m_data,str);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">String::~String(<span class=\"keyword\">void</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span>[] m_data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">String::String(<span class=\"keyword\">const</span> String &amp;other) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> len = <span class=\"built_in\">strlen</span>(other.m_data);</span><br><span class=\"line\">    m_data = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[len + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(m_data,other.m_data);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">String &amp; String :: <span class=\"keyword\">operator</span> = (<span class=\"keyword\">const</span> String &amp;other) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == &amp;other) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> [] m_data;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> length = <span class=\"built_in\">strlen</span>( other.m_data ); </span><br><span class=\"line\">    m_data = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[length+<span class=\"number\">1</span>]; 　</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>( m_data, other.m_data ); </span><br><span class=\"line\">    <span class=\"keyword\">return</span> *<span class=\"keyword\">this</span>; 　　　　　　　　<span class=\"comment\">//得分点：返回本对象的引用</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"面试","slug":"面试","count":32,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":25,"path":"api/tags/C.json"}]}