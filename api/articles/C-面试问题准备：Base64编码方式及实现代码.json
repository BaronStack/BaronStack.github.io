{"title":"Base64编码方式及实现代码","slug":"C-面试问题准备：Base64编码方式及实现代码","date":"2018-03-13T13:39:21.000Z","updated":"2018-03-14T13:59:20.000Z","comments":true,"path":"api/articles/C-面试问题准备：Base64编码方式及实现代码.json","photos":[],"link":"","excerpt":"之前根本就没有听过base64编码，可能还是对网络这里了解不够，参加了北京柠檬微趣的现场笔试，看到了这个题目，当时想的太简单了，其实本来思路想好之后就不会很难，可惜先入为主了，导致没有参加面试机会，可惜可惜！！！<br>特总结base64编码实现如下：<br>","covers":["/images/base64.png","/images/base.png"],"content":"<blockquote>\n<p>之前根本就没有听过base64编码，可能还是对网络这里了解不够，参加了北京柠檬微趣的现场笔试，看到了这个题目，当时想的太简单了，其实本来思路想好之后就不会很难，可惜先入为主了，导致没有参加面试机会，可惜可惜！！！<br>特总结base64编码实现如下：<br><a id=\"more\"></a></p>\n<h2 id=\"Base64编码\"><a href=\"#Base64编码\" class=\"headerlink\" title=\"Base64编码\"></a>Base64编码</h2></blockquote>\n<p>是一种基于64个可打印字符来表示二进制数据的表示方法!它是一种将二进制编码转换为可打印字符一种。<br>它是MIME编码里面非常常见一种可逆转换二进制方法！现常用于电子邮件中，邮件类型声明如：Content-Transfer-Encoding: base64 。</p>\n<h2 id=\"编码原理\"><a href=\"#编码原理\" class=\"headerlink\" title=\"编码原理\"></a>编码原理</h2><p>我们知道三个字节有24个位元，就可以刚好对应于4个Base64单元，即3个字节需要用4个Base64的可打印字符来表示。在Base64中的可打印字符包括字母A-Z、a-z、数字0-9 ，这样共有62个字符，此外两个可打印符号在不同的系统中一般有所不同。但是，我们经常所说的Base64另外2个字符是：“+/”。这64个字符，所对应表如下。<br><img src=\"/images/base64.png\" alt=\"\"></p>\n<p>转换的时候按照如下方法:</p>\n<p><font color=\"#DC143C\">将输入数据流每次取6 bit，用此6 bit的值(0-63)作为索引去查表，输出相应字符。这样，每3个字节将编码为4个字符(3×8 → 4×6)；不满4个字符的以’=’填充</font><br>如下图：</p>\n<p><img src=\"/images/base.png\" alt=\"\"></p>\n<p>主要是通过位运算符将6bit的数据提取出来，并且对最后不足6位的bit进行补位。</p>\n<p>代码如下:</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">char</span> EnBase64Tab[] = <span class=\"string\">\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> CBase64::EncodeBase64(<span class=\"keyword\">const</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span>* pSrc, <span class=\"keyword\">char</span>* pDst, <span class=\"keyword\">int</span> nSrcLen, <span class=\"keyword\">int</span> nMaxLineLen)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span> c1, c2, c3;    <span class=\"comment\">// 输入缓冲区读出3个字节</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> nDstLen = <span class=\"number\">0</span>;             <span class=\"comment\">// 输出的字符计数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> nLineLen = <span class=\"number\">0</span>;            <span class=\"comment\">// 输出的行长度计数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> nDiv = nSrcLen / <span class=\"number\">3</span>;      <span class=\"comment\">// 输入数据长度除以3得到的倍数</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> nMod = nSrcLen % <span class=\"number\">3</span>;      <span class=\"comment\">// 输入数据长度除以3得到的余数</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// 每次取3个字节，编码成4个字符</span></span><br><span class=\"line\">    <span class=\"built_in\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; nDiv; i ++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 取3个字节</span></span><br><span class=\"line\">        c1 = *pSrc++;</span><br><span class=\"line\">        c2 = *pSrc++;</span><br><span class=\"line\">        c3 = *pSrc++;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">// 编码成4个字符</span></span><br><span class=\"line\">        *pDst++ = EnBase64Tab[c1 &gt;&gt; <span class=\"number\">2</span>];</span><br><span class=\"line\">        *pDst++ = EnBase64Tab[((c1 &lt;&lt; <span class=\"number\">4</span>) | (c2 &gt;&gt; <span class=\"number\">4</span>)) &amp; <span class=\"number\">0x3f</span>];</span><br><span class=\"line\">        *pDst++ = EnBase64Tab[((c2 &lt;&lt; <span class=\"number\">2</span>) | (c3 &gt;&gt; <span class=\"number\">6</span>)) &amp; <span class=\"number\">0x3f</span>];</span><br><span class=\"line\">        *pDst++ = EnBase64Tab[c3 &amp; <span class=\"number\">0x3f</span>];</span><br><span class=\"line\">        nLineLen += <span class=\"number\">4</span>;</span><br><span class=\"line\">        nDstLen += <span class=\"number\">4</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"comment\">// 是否输出换行？</span></span><br><span class=\"line\">        <span class=\"built_in\">if</span> (nLineLen &gt; nMaxLineLen - <span class=\"number\">4</span>)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            *pDst++ = <span class=\"string\">'/r'</span>;</span><br><span class=\"line\">            *pDst++ = <span class=\"string\">'/n'</span>;</span><br><span class=\"line\">            nLineLen = <span class=\"number\">0</span>;</span><br><span class=\"line\">            nDstLen += <span class=\"number\">2</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// 编码余下的字节</span></span><br><span class=\"line\">    <span class=\"built_in\">if</span> (nMod == <span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        c1 = *pSrc++;</span><br><span class=\"line\">        *pDst++ = EnBase64Tab[(c1 &amp; <span class=\"number\">0xfc</span>) &gt;&gt; <span class=\"number\">2</span>];</span><br><span class=\"line\">        *pDst++ = EnBase64Tab[((c1 &amp; <span class=\"number\">0x03</span>) &lt;&lt; <span class=\"number\">4</span>)];</span><br><span class=\"line\">        *pDst++ = <span class=\"string\">'='</span>;</span><br><span class=\"line\">        *pDst++ = <span class=\"string\">'='</span>;</span><br><span class=\"line\">        nLineLen += <span class=\"number\">4</span>;</span><br><span class=\"line\">        nDstLen += <span class=\"number\">4</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">else</span> <span class=\"built_in\">if</span> (nMod == <span class=\"number\">2</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        c1 = *pSrc++;</span><br><span class=\"line\">        c2 = *pSrc++;</span><br><span class=\"line\">        *pDst++ = EnBase64Tab[(c1 &amp; <span class=\"number\">0xfc</span>) &gt;&gt; <span class=\"number\">2</span>];</span><br><span class=\"line\">        *pDst++ = EnBase64Tab[((c1 &amp; <span class=\"number\">0x03</span>) &lt;&lt; <span class=\"number\">4</span>) | ((c2 &amp; <span class=\"number\">0xf0</span>) &gt;&gt; <span class=\"number\">4</span>)];</span><br><span class=\"line\">        *pDst++ = EnBase64Tab[((c2 &amp; <span class=\"number\">0x0f</span>) &lt;&lt; <span class=\"number\">2</span>)];</span><br><span class=\"line\">        *pDst++ = <span class=\"string\">'='</span>;</span><br><span class=\"line\">        nDstLen += <span class=\"number\">4</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">// 输出加个结束符</span></span><br><span class=\"line\">    *pDst = <span class=\"string\">'/0'</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"built_in\">return</span> nDstLen;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"面试","slug":"面试","count":36,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":25,"path":"api/tags/C.json"}]}