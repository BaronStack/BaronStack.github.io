{"title":"利用grep 配合数据流重定向查找处理大量文件查找问题","slug":"利用grep-配合数据流重定向查找处理大量文件查找问题","date":"2018-01-15T02:45:24.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/利用grep-配合数据流重定向查找处理大量文件查找问题.json","photos":[],"link":"","excerpt":"情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题目标：正确使用正则表达式前提：了解数据流重定向，以及通过子命令$(command)来处理文件名的查找","covers":null,"content":"<h6 id=\"情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题\"><a href=\"#情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题\" class=\"headerlink\" title=\"情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题\"></a>情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题</h6><ul>\n<li>目标：正确使用正则表达式</li>\n<li>前提：了解数据流重定向，以及通过子命令$(command)来处理文件名的查找<a id=\"more\"></a></li>\n</ul>\n<h6 id=\"利用正则表达式查找系统中含有某些特殊关键字的文件\"><a href=\"#利用正则表达式查找系统中含有某些特殊关键字的文件\" class=\"headerlink\" title=\"利用正则表达式查找系统中含有某些特殊关键字的文件\"></a>利用正则表达式查找系统中含有某些特殊关键字的文件</h6><p><code>grep &#39;\\*&#39; /etc/*</code> 查找/etc／一级目录文件下查找含有*的文件内容</p>\n<blockquote>\n<p>‘\\<em>‘是正则表达式,代表的是”\\</em>“这个字符，而”*“如果不用”\\“进行转义表示的是0，或者无穷多个前一个字符。<br> /etc/<em>中”\\</em>“表示的是脚本bash通配符，代表文件名</p>\n</blockquote>\n<p> 如果想要查找连同完整的/etc 目录数据，就需要这样做</p>\n<p> <code>grep &#39;\\*&#39; $(find /etc -type f)</code></p>\n<blockquote>\n<p>$(command)表示子命令，即先执行find查找文件，再执行grep 命令从文件中找出含有*的字符串</p>\n</blockquote>\n<p> 如果查找的是整个系统的文件,可以</p>\n<p> <code>grep &#39;\\*&#39; $(find / -type f)</code> </p>\n<p> 这个时候可能会出现系统文件过多，而命令列的长度有限制系统会爆出<br> <code>-bash: /bin/grep: Argument list too long</code>的问题</p>\n<p> 那么可以利用数据流重定向中的管道命令以及xargs命令，让grep每次处理文件的数目少点</p>\n<p> <code>find / -type f | xargs -n 10 grep &#39;\\*&#39;</code></p>\n<p> 讲整个系统文件利用xargs分成10个一组，每次grep命令仅处理10个文件</p>\n<p> 关于xargs命令的详细使用方式可以参考<a href=\"http://man.linuxde.net/xargs\" target=\"_blank\" rel=\"noopener\">xargs</a></p>\n","categories":[{"name":"linux","slug":"linux","count":4,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":4,"path":"api/tags/linux.json"}]}