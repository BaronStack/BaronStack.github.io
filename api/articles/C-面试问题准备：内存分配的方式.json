{"title":"C++ 面试问题准备：内存分配的方式","slug":"C-面试问题准备：内存分配的方式","date":"2018-01-30T12:16:57.000Z","updated":"2018-01-30T13:36:01.000Z","comments":true,"path":"api/articles/C-面试问题准备：内存分配的方式.json","photos":[],"link":"","excerpt":"C++ 中常见内存分配及其存储区域有以下几种堆分配栈分配自由存储区静态存储区常量存储区","covers":null,"content":"<h3 id=\"C-中常见内存分配及其存储区域有以下几种\"><a href=\"#C-中常见内存分配及其存储区域有以下几种\" class=\"headerlink\" title=\"C++ 中常见内存分配及其存储区域有以下几种\"></a>C++ 中常见内存分配及其存储区域有以下几种</h3><ul>\n<li>堆分配</li>\n<li>栈分配</li>\n<li>自由存储区</li>\n<li>静态存储区</li>\n<li>常量存储区<a id=\"more\"></a></li>\n</ul>\n<p>这里首先描述以下除了堆和栈的三种存储方式：</p>\n<h4 id=\"自由存储区\"><a href=\"#自由存储区\" class=\"headerlink\" title=\"自由存储区\"></a>自由存储区</h4><p>这个存储区是单独为C++ 中<code>new</code>运算符提出来的，该存储区是<code>new</code>和<code>delete</code>动态分配和释放对象的抽象概念。在《STL 源码剖析中》自由存储区是利用allocate空间配置器进行STL操作对象的空间分配，通过allocate ,deallocate,construct,destroy进行空间的分配和释放。详细可以参考文章<a href=\"http://vigortyy.com/2018/01/27/C-开发面试准备：STL-allocator/\" target=\"_blank\" rel=\"noopener\">STL allocator</a></p>\n<blockquote>\n<p>别将自由存储区与堆分配等价，堆是由操作系统进行维护的一片内存区域</p>\n</blockquote>\n<h4 id=\"静态存储区\"><a href=\"#静态存储区\" class=\"headerlink\" title=\"静态存储区\"></a>静态存储区</h4><p>全局变量和静态变量的存储是放在同一块区域，初始化的静态变量和全局变量在一块，未初始化的在另一块，程序运行结束后由系统自动释放。</p>\n<h4 id=\"常量存储区\"><a href=\"#常量存储区\" class=\"headerlink\" title=\"常量存储区\"></a>常量存储区</h4><p>这是一块比较特殊的存储区，是固化在执行文件上的数据，里面存放的是常量，不允许被修改。</p>\n<p><strong>接下来我们看看堆和栈的区别</strong></p>\n<ol>\n<li><p>内存分配：</p>\n<p> 堆：一般由程序员分配释放，若程序员不释放，程序结束后会由操作系统进行释放（这里主要是指局部变量使用堆分配的方式）。它的分配方式类似与链表，常用的关键字是：malloc,free</p>\n<p> 栈：由系统自动飞配，结束后系统自动释放（局部变量）</p>\n</li>\n<li><p>申请方式：</p>\n<p> 堆：需要程序员自己申请，并指明大小。</p>\n<p> 栈：系统自动分配</p>\n</li>\n<li><p>大小限制：</p>\n<p> 堆：是向高地址扩展的数据结构，是不连续的内存区域。这是由于系统是用链表来存储的空闲内存地址的，自然是不连续的，而链表的遍历方向是由低地址向高地址。堆的大小受限于计算机系统中有效的虚拟内存。由此可见，堆获得的空间比较灵活，也比较大</p>\n<p> 栈：在Windows下, 栈是向低地址扩展的数据结构，是一块连续的内存的区域。栈的大小是固定的（是一个编译时就确定的常数），如果申请的空间超过栈的剩余空间时，将提示overflow。因此，能从栈获得的空间较小。</p>\n</li>\n<li><p>效率方面：</p>\n<p> 堆：分配空间需要使用malloc以及用free释放，这个过程需要调用操作系统的函数，由操作系统通过一定的内存分配算法分配空间，最后才由汇编器翻译为指令执行，效率较低。但是会造成大量的内存碎片，如果不合理进行释放，会导致系统运行缓慢甚至崩溃</p>\n<p> 栈：栈是机器系统的数据结构，由与在操作系统中有栈操作的指令，所以执行起来较快。</p>\n</li>\n<li><p>存放内容方面：</p>\n<p> 堆：一般情况堆顶使用一个字节的空间来存放堆的大小，而堆中具体存放内容是由程序员来完成的</p>\n<p> 栈：栈存放的内容，一般来说是函数地址和相关参数。</p>\n<blockquote>\n<p>这里关于在栈中，函数调用过程栈帧的变化大家可以参考这篇文章<a href=\"http://blog.csdn.net/qq_29403077/article/details/53205010\" target=\"_blank\" rel=\"noopener\">函数调用过程栈帧变化详解</a>.<strong>总之就是将控制进行跳转，同时对于控制中用到的变量以及函数地址分配相应的栈空间。</strong></p>\n</blockquote>\n</li>\n</ol>\n<p>这里是一些外国人的博客对于堆栈的描述</p>\n<p><a href=\"http://www.learncpp.com/cpp-tutorial/79-the-stack-and-the-heap/\" target=\"_blank\" rel=\"noopener\">The stack and the heap</a></p>\n<p><a href=\"https://salilkapur.wordpress.com/2013/04/11/stack-memory-vs-heap-memory-in-cc/\" target=\"_blank\" rel=\"noopener\">STACK MEMORY VS HEAP MEMORY IN C/C++</a></p>\n<p>个人感觉写的比较浅，当然常用到的主要区别都写到了</p>\n","categories":[{"name":"面试","slug":"面试","count":6,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":8,"path":"api/tags/C.json"}]}