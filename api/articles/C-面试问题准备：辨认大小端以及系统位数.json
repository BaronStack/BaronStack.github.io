{"title":"辨认大小端以及系统位数","slug":"C-面试问题准备：辨认大小端以及系统位数","date":"2018-02-17T08:33:17.000Z","updated":"2018-03-14T13:23:16.000Z","comments":true,"path":"api/articles/C-面试问题准备：辨认大小端以及系统位数.json","photos":[],"link":"","excerpt":"什么是大小端(big-endian和small-endian)即最高有效位(most significant)在低地址位就是大端，最低有效位(least significant)在低地址就是小端。<br>大概意思就是：我们取数据a = 0x12ff，那么最高有效位指的就是数字的0x12数据，最低有效位指的是0xff。<br>","covers":null,"content":"<h2 id=\"什么是大小端-big-endian和small-endian\"><a href=\"#什么是大小端-big-endian和small-endian\" class=\"headerlink\" title=\"什么是大小端(big-endian和small-endian)\"></a>什么是大小端(big-endian和small-endian)</h2><p>即最高有效位(most significant)在低地址位就是大端，最低有效位(least significant)在低地址就是小端。<br>大概意思就是：我们取数据a = 0x12ff，那么最高有效位指的就是数字的0x12数据，最低有效位指的是0xff。<br><a id=\"more\"></a></p>\n<blockquote>\n<p>即如果数据的最高有效位的数据0x12存放在内存中的低地址，那么该计算机存储的方式就是大端存储。相反就是小端存储。</p>\n</blockquote>\n<h2 id=\"如何用程序分辨大小端\"><a href=\"#如何用程序分辨大小端\" class=\"headerlink\" title=\"如何用程序分辨大小端\"></a>如何用程序分辨大小端</h2><p>根据上面大小端的定义，我们可以写出如下代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>  <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> num1 = <span class=\"number\">0x12FF</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span> * address = (<span class=\"keyword\">char</span> *)&amp;num1;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"low bytes is %x , high bytes is %x\"</span>,*address &amp; <span class=\"number\">0xFF</span>,  *(address + <span class=\"number\">1</span>) &amp; <span class=\"number\">0xFF</span> );</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">output:</span><br><span class=\"line\">low bytes is ff , high bytes is <span class=\"number\">12</span></span><br></pre></td></tr></table></figure>\n<p>即数据<code>num1 = 0x12FF</code>的最高有效位<code>0x12</code>存储在存放该数据内存地址较高的位置，该程序可以做为验证计算机系统存储数据是大端还是小端。</p>\n<h2 id=\"如何分辨计算机系统是32位还是64位\"><a href=\"#如何分辨计算机系统是32位还是64位\" class=\"headerlink\" title=\"如何分辨计算机系统是32位还是64位\"></a>如何分辨计算机系统是32位还是64位</h2><p>在32位系统中<code>int</code> 和 <code>long int</code>是4 字节，而64位系统中则变为8字</p>\n<p>所以在以上代码中添加如下一行程序即可查看系统位数</p>\n<figure class=\"highlight perl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">0x80000000</span>;</span><br><span class=\"line\"><span class=\"keyword\">printf</span>(<span class=\"string\">\"\\nos is%ld\\t%ld\\n\"</span>,a,sizeof(<span class=\"keyword\">int</span>));</span><br></pre></td></tr></table></figure>\n","categories":[{"name":"面试","slug":"面试","count":36,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":25,"path":"api/tags/C.json"},{"name":"OS","slug":"OS","count":4,"path":"api/tags/OS.json"}]}