{"total":44,"pageSize":10,"pageCount":5,"data":[{"title":"东方月初：你的梦想我帮你承担","slug":"东方月初：你的梦想我帮你承担","date":"2018-01-28T04:16:20.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/东方月初：你的梦想我帮你承担.json","excerpt":"<h2 id=\"那一刻，你的背影如此高大\"><a href=\"#那一刻，你的背影如此高大\" class=\"headerlink\" title=\"那一刻，你的背影如此高大\"></a>那一刻，你的背影如此高大</h2><p><img src=\"/images/yongyong/beiying1.png\" alt=\"\"></p>\n<p>我叫东方月初，是东方灵族的人，","keywords":null,"cover":"/images/yongyong/beiying1.png","content":null,"text":"那一刻，你的背影如此高大 [Figure] 从此我们陷入世俗的漩涡，但我知道我们都为了同一个梦想时时刻刻在努力。所以我们最后在别人眼里的自相残杀，其实只是更好得掩盖我们最后的目的。时光流逝，我希望用自己的方式打开你内心的那个心结，没有什么理由，没有什么目的，只是想看到你发自心底的","link":"","raw":null,"photos":[],"categories":[{"name":"随笔","slug":"随笔","count":2,"path":"api/categories/随笔.json"}],"tags":[]},{"title":"C++面试问题准备：STL--allocator","slug":"C-开发面试准备：STL-allocator","date":"2018-01-27T15:02:40.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/C-开发面试准备：STL-allocator.json","excerpt":"<blockquote>\n<p>最近在读侯捷老师的《STL源码剖析》，写写总结。他的STL主要是SGI 版本的，也就是我们常用的GCC编译器支持","keywords":null,"cover":null,"content":null,"text":"最近在读侯捷老师的《STL源码剖析》，写写总结。他的STL主要是SGI 版本的，也就是我们常用的GCC编译器支持 什么是allocator相信对C++感兴趣的伙伴肯定对STL这个模版库情有独钟，但是当站在STL的角度来看这些容器的实现那么第一个需要知道的就是allocatoral","link":"","raw":null,"photos":[],"categories":[{"name":"C++","slug":"C","count":2,"path":"api/categories/C.json"},{"name":"面试","slug":"C/面试","count":2,"path":"api/categories/C/面试.json"}],"tags":[{"name":"C++","slug":"C","count":11,"path":"api/tags/C.json"}]},{"title":"C++开发面试问题","slug":"C-开发面试问题","date":"2018-01-26T14:47:27.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/C-开发面试问题.json","excerpt":"<h4 id=\"语言基础\"><a href=\"#语言基础\" class=\"headerlink\" title=\"语言基础\"></a>语言基础</h4><ul>\n<li>OOP（封装、继承、多态） + V func 的实现，V table 的原理</li>\n<li>const static的各种情况，分清const pointer 和pointer to const以及两者合体的形式","keywords":null,"cover":null,"content":null,"text":"语言基础OOP（封装、继承、多态） + V func 的实现，V table 的原理const static的各种情况，分清const pointer 和pointer to const以及两者合体的形式内存泄漏 三条规则。注意exception safe和smart point","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":9,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":11,"path":"api/tags/C.json"}]},{"title":"Python爬虫 爬取批量图片","slug":"Python爬虫-爬取批量图片","date":"2018-01-26T10:40:37.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/Python爬虫-爬取批量图片.json","excerpt":"<p>本部分的主要代码在<br><a href=\"https://github.com/BaronStack/Python-Reptitle/tree/master/reptitle_trying\" target=\"_blank\" rel=\"noopener\">爬取批量图片到本地</a></p>\n<h4 id=\"如何用python-爬取图片网站的图片\"><a href=\"#如何用python-爬取图片网站的图片\" class=\"headerlink\" title=\"如何用python 爬取图片网站的图片\"></a>如何用python 爬取图片网站的图片</h4><blockquote>\n<p>这里的图片是按页显示的，所以它爬取的是每一页的图片</p>\n</blockquote>\n<ul>\n<li>获取网页链接</li>\n<li>利用正则提取以页为单位的html内容</li>\n<li>获取每一页中图片的存储链接</li>\n<li>利用循环下载保存","keywords":null,"cover":"/images/python/scrap_images.png","content":null,"text":"本部分的主要代码在<br>爬取批量图片到本地如何用python 爬取图片网站的图片这里的图片是按页显示的，所以它爬取的是每一页的图片获取网页链接利用正则提取以页为单位的html内容获取每一页中图片的存储链接利用循环下载保存导入的包如下：<br>1<br>2<br>3<br>4<b","link":"","raw":null,"photos":[],"categories":[{"name":"python","slug":"python","count":2,"path":"api/categories/python.json"}],"tags":[{"name":"python","slug":"python","count":4,"path":"api/tags/python.json"},{"name":"爬虫","slug":"爬虫","count":1,"path":"api/tags/爬虫.json"}]},{"title":"2018-01-25","slug":"2018-01-25","date":"2018-01-25T01:57:43.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/2018-01-25.json","excerpt":"<h5 id=\"向死而生：我修的死亡学分—–李开复\"><a href=\"#向死而生：我修的死亡学分—–李开复\" class=\"headerlink\" title=\"向死而生：我修的死亡学分—–李开复\"></a>向死而生：我修的死亡学分—–李开复</h5><p>昨天晚上开始读这本书，内心一直很纠结。","keywords":null,"cover":null,"content":null,"text":"向死而生：我修的死亡学分—–李开复昨天晚上开始读这本书，内心一直很纠结。虽然我现在并没有取得像李开复这样的专业成果，但是当我想出这个问题的一瞬间我知道我是急功近利的。李开复在事业的最顶峰，人生的最高点遇到了淋巴癌第四期，因为他过于繁杂的工作压力以及对自己近乎苛刻的要求拖垮了他的身","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":22,"path":"api/categories/life.json"}],"tags":[]},{"title":"2018-01-24","slug":"2018-01-24","date":"2018-01-24T12:40:04.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/2018-01-24.json","excerpt":"<p>今天我看到了西安本年度的第一场雪，柔和而又不失优雅。</p>\n<p><img src=\"/images/FirstSnowIn2018.jpg\" alt=\"\">","keywords":null,"cover":"/images/FirstSnowIn2018.jpg","content":null,"text":"今天我看到了西安本年度的第一场雪，柔和而又不失优雅。 [Figure] 老师今天给我指点了开题报告，嗯，问题还挺多的。但是我个人实在没法用心去做这个感觉没什么用的开题报告，不就是一个毕业论文的准备嘛，我想不通为什么要花费这么大的精力去搞这个开题报告呢。老师用他最擅长的股票黑屏软件","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":22,"path":"api/categories/life.json"}],"tags":[]},{"title":"Tensorflow 训练变量的存储与加载","slug":"Tensorflow-训练变量的存储与加载","date":"2018-01-23T13:23:20.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/Tensorflow-训练变量的存储与加载.json","excerpt":"<p><a href=\"https://github.com/BaronStack/tensorflow_learning/tree/master/莫烦TensorflowProgram_Learning/implement_store_and_restore_saver\" target=\"_blank\" rel=\"noopener\">TF代码</a></p>\n<h4 id=\"本篇主要讲的是利用TensorFlow将我们训练好的变量-Weights-和-biases-或者loss…-存储下来，下次训练加载这次的存储\"><a href=\"#本篇主要讲的是利用TensorFlow将我们训练好的变量-Weights-和-biases-或者loss…-存储下来，下次训练加载这次的存储\" class=\"headerlink\" title=\"本篇主要讲的是利用TensorFlow将我们训练好的变量(Weights 和 biases 或者loss…)存储下来，下次训练加载这次的存储 \"></a>本篇主要讲的是利用TensorFlow将我们训练好的变量(Weights 和 biases 或者loss…)存储下来，下次训练加载这次的存储","keywords":null,"cover":"/images/TensorflowImages/store.png","content":null,"text":"TF代码本篇主要讲的是利用TensorFlow将我们训练好的变量(Weights 和 biases 或者loss…)存储下来，下次训练加载这次的存储 存储主要利用函数<br>1<br>save_path = saver.save(sess, \"my_net/save_net.ck","link":"","raw":null,"photos":[],"categories":[{"name":"tensor flow","slug":"tensor-flow","count":3,"path":"api/categories/tensor-flow.json"}],"tags":[{"name":"machine learning","slug":"machine-learning","count":3,"path":"api/tags/machine-learning.json"},{"name":"python","slug":"python","count":4,"path":"api/tags/python.json"}]},{"title":"2018-01-23","slug":"2018-01-23","date":"2018-01-23T11:30:14.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/2018-01-23.json","excerpt":"<blockquote>\n<p>无善无恶心之体，有善有恶意之动。知善知恶是良知，为善去恶是格物。</p>\n</blockquote>\n<p>最近状态不是很好，内心有点浮躁了。昨天晚上做梦竟然做了一晚上的语文试卷，我都不知道自己在干什么，就坐在那努力得理解题目，看一个不知道怎么写，看一个不知道怎么写。今天早上起床让永永给分析了一下，","keywords":null,"cover":null,"content":null,"text":"无善无恶心之体，有善有恶意之动。知善知恶是良知，为善去恶是格物。最近状态不是很好，内心有点浮躁了。昨天晚上做梦竟然做了一晚上的语文试卷，我都不知道自己在干什么，就坐在那努力得理解题目，看一个不知道怎么写，看一个不知道怎么写。今天早上起床让永永给分析了一下，我去，她竟然还有相关的书","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":22,"path":"api/categories/life.json"}],"tags":[]},{"title":"2018-01-21","slug":"2018-01-21","date":"2018-01-21T13:43:30.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/2018-01-21.json","excerpt":"<p>废话不多说，先上一个关于人工智能以及深度学习入门的一个大佬的博客链接<a href=\"https://morvanzhou.github.io/\" target=\"_blank\" rel=\"noopener\">莫烦</a>，这两天一直在看他的教学视频，真的是受益匪浅。","keywords":null,"cover":null,"content":null,"text":"废话不多说，先上一个关于人工智能以及深度学习入门的一个大佬的博客链接莫烦，这两天一直在看他的教学视频，真的是受益匪浅。我从他的视频讲解中了解到的一些理论知识如下：什么是神经网络什么是梯度下降什么是激励函数这一些基础且重要的概念，让我在实践过程中对神经网络有了更深一步的了解神经网络","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":22,"path":"api/categories/life.json"}],"tags":[]},{"title":"Sat Jan 20 2018 00:00:00 GMT+0800 (CST)","slug":"2018-01-20","date":"2018-01-20T09:36:54.000Z","updated":"2018-02-22T12:54:00.000Z","comments":true,"path":"api/articles/2018-01-20.json","excerpt":"<p>今天和学长学姐参加了一个关于人工智能的讲座，虽然听的过程中收获不是很多，但是在结束后和直系学长的聊天过程中让我受益匪浅。这个学长本科是在我们学校，不过他在牛津大学上过两年的博士，对于人工智能领域中的深度学习领域中的图像分割、识别、分类了解较为清楚。","keywords":null,"cover":"/images/yongyong/senior01.jpg","content":null,"text":"今天和学长学姐参加了一个关于人工智能的讲座，虽然听的过程中收获不是很多，但是在结束后和直系学长的聊天过程中让我受益匪浅。这个学长本科是在我们学校，不过他在牛津大学上过两年的博士，对于人工智能领域中的深度学习领域中的图像分割、识别、分类了解较为清楚。当然今天是他做为主讲人，对我这种","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":22,"path":"api/categories/life.json"}],"tags":[]}]}