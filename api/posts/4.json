{"total":83,"pageSize":10,"pageCount":9,"data":[{"title":"剑指 offer--链表中倒数第k个结点和合并反转链表","slug":"C-面试问题准备：剑指 offer-链表中倒数第k个结点和合并反转链表","date":"2018-03-07T11:07:47.000Z","updated":"2018-03-14T13:21:03.000Z","comments":true,"path":"api/articles/C-面试问题准备：剑指 offer-链表中倒数第k个结点和合并反转链表.json","excerpt":"<h2 id=\"链表中倒数第K个结点\"><a href=\"#链表中倒数第K个结点\" class=\"headerlink\" title=\"链表中倒数第K个结点\"></a>链表中倒数第K个结点</h2><blockquote>\n<p>问题描述：输入一个链表，输出该链表中倒数第K个结点。例如一个链表有6个结点，从头结点开始它们的值依次是1，2，3，4，5，6。这个链表的倒数第三个结点值为4。<br>","keywords":null,"cover":"/images/linkList.jpeg","content":null,"text":"链表中倒数第K个结点问题描述：输入一个链表，输出该链表中倒数第K个结点。例如一个链表有6个结点，从头结点开始它们的值依次是1，2，3，4，5，6。这个链表的倒数第三个结点值为4。<br>为了得到我们想要的结果，我们会很自然的想到假设这个链表有n个结点，那么倒数第k个结点就是从头结","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":37,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":25,"path":"api/tags/C.json"}]},{"title":"strcpy和strncpy以及memcpy函数","slug":"C-面试问题准备：strcpy和strncpy以及memcpy函数","date":"2018-03-06T02:46:32.000Z","updated":"2018-03-14T13:21:03.000Z","comments":true,"path":"api/articles/C-面试问题准备：strcpy和strncpy以及memcpy函数.json","excerpt":"<h2 id=\"strcpy函数以及strncpy函数\"><a href=\"#strcpy函数以及strncpy函数\" class=\"headerlink\" title=\"strcpy函数以及strncpy函数\"></a>strcpy函数以及strncpy函数</h2><blockquote>\n<p>这两个函数都是字符串拷贝函数</p>\n</blockquote>\n<p>函数原型：</p>\n<p><code>char * strcpy(char * destStr,char * srcStr);</code></p>\n<p><code>cahr * strncpy(char * destStr,char * srcStr,int num);</code></p>","keywords":null,"cover":null,"content":null,"text":"strcpy函数以及strncpy函数这两个函数都是字符串拷贝函数函数原型：char * strcpy(char * destStr,char * srcStr);cahr * strncpy(char * destStr,char * srcStr,int num);很明显可以","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":37,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":25,"path":"api/tags/C.json"}]},{"title":"2018-03-04","slug":"2018-03-04","date":"2018-03-04T15:46:13.000Z","updated":"2018-03-05T07:05:47.000Z","comments":true,"path":"api/articles/2018-03-04.json","excerpt":"<p>我和她不在一块的时间老想她，很想很想。结果今天中午回到学校，她竟然在我们学校学习，所以：","keywords":null,"cover":null,"content":null,"text":"我和她不在一块的时间老想她，很想很想。结果今天中午回到学校，她竟然在我们学校学习，所以：<br>今天和糖永永同学呆在一块的时间大概有8个小时，这是一种很独特的感觉。<br>我们一起学习，她在看专八，我在总结面试笔记。我看看她，她看看我，莫名开心兴奋，当然对于我来说还真好，越看她越","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":34,"path":"api/categories/life.json"}],"tags":[]},{"title":"进程、线程、死锁、多线程还是多进程的选择以及区别","slug":"C-面试问题准备：多线程还是多进程的选择以及区别","date":"2018-03-04T12:27:20.000Z","updated":"2018-03-14T13:23:16.000Z","comments":true,"path":"api/articles/C-面试问题准备：多线程还是多进程的选择以及区别.json","excerpt":"<h2 id=\"进程和线程的区别\"><a href=\"#进程和线程的区别\" class=\"headerlink\" title=\"进程和线程的区别\"></a>进程和线程的区别</h2><ul>\n<li>一个进程由一个或多个线程组成，线程是一个进程中代码的不同执行路线；</li>\n<li>进程之间相互独立，但同一进程下的各个线程之间共享程序的内存空间(包括代码段、数据集、堆等)及一些进程级的资源(如打开文件和信号)，某进程内的线程在其它进程不可见</li>\n<li>调度和切换：线程上下文切换比进程上下文切换要快得多","keywords":null,"cover":"/images/deadLock.jpg","content":null,"text":"进程和线程的区别一个进程由一个或多个线程组成，线程是一个进程中代码的不同执行路线；进程之间相互独立，但同一进程下的各个线程之间共享程序的内存空间(包括代码段、数据集、堆等)及一些进程级的资源(如打开文件和信号)，某进程内的线程在其它进程不可见调度和切换：线程上下文切换比进程上下文","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":37,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":25,"path":"api/tags/C.json"}]},{"title":"指针和引用的区别以及extern C的作用","slug":"C-面试问题总结：指针和引用的区别","date":"2018-03-04T05:50:38.000Z","updated":"2018-03-14T13:24:36.000Z","comments":true,"path":"api/articles/C-面试问题总结：指针和引用的区别.json","excerpt":"<h3 id=\"指针和引用的区别\"><a href=\"#指针和引用的区别\" class=\"headerlink\" title=\"指针和引用的区别\"></a>指针和引用的区别</h3><blockquote>\n<p>指针和引用都代表的是地址</p>\n</blockquote>\n<ul>\n<li><strong>引用</strong>需要指向某些对象，但是你可以声明指针变量为空，然后将引用指向该指针变量。</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">char</span> <span class=\"meta\">*pc</span> <span class=\"string\">=</span> <span class=\"literal\">NULL</span><span class=\"string\">;</span></span><br><span class=\"line\"><span class=\"string\">char</span> <span class=\"meta\">&amp;rc</span> <span class=\"string\">=</span> <span class=\"string\">*pc;</span></span><br></pre></td></tr></table></figure>","keywords":null,"cover":null,"content":null,"text":"指针和引用的区别指针和引用都代表的是地址引用需要指向某些对象，但是你可以声明指针变量为空，然后将引用指向该指针变量。1<br>2<br>char *pc = NULL;<br>char &amp;rc = *pc;<br>因为引用肯定会指向一个对象，因此必须初始化，其实和１是一回","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":37,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":25,"path":"api/tags/C.json"}]},{"title":"2018-03-02","slug":"2018-03-02","date":"2018-03-02T13:42:39.000Z","updated":"2018-03-03T06:19:00.000Z","comments":true,"path":"api/articles/2018-03-02.json","excerpt":"","keywords":null,"cover":null,"content":"<p>今天去火车站接到了糖小猪同学，她以为我不会去，结果，哈哈哈，把她给吓到了。</p>\n<p>和她安安静静得坐了一个多小时得火车，嘿嘿，可以看的出来她挺开心的，不过我的初衷是天这么黑，担心她的安全！</p>\n<p>之后回到学校，我们进行了一天简单的应该算是约会吧，一起吃了鸡公煲，一起摘了一筐草莓，有的甜，有的酸。一起从西安外国语大学走到了接近西北政法大学的一个影院，一起看了电影《红海行动》，在路上碰到一个以前学习英语的雪婷老师，结果没理我，我一脸懵逼！糖同学一出口就是是不是你们以前学习口语的，哎呦，我的天哪，她怎么知道的，我的天，内心太震惊了！然后一起在学校里吃了元宵，一起坐在饭堂三楼靠窗的做为聊天，一起走在有大月亮的路上，一切都是美好的开始。</p>\n<p>感觉和她有那么一点点默契了，有的时候她知道我是怎么想的，有的时候我知道她是怎么想的。想到接下来的日子就莫名开心，同样我也会尽自己最大的可能准备北京的工作问题。为了以后能够更容易就这样简简单单，我会在接下来的两个月付出自己所有的能量！</p>\n<p>今天我们走了最少有一万步，嘿嘿。有点累，但是很开心。</p>\n","text":"今天去火车站接到了糖小猪同学，她以为我不会去，结果，哈哈哈，把她给吓到了。和她安安静静得坐了一个多小时得火车，嘿嘿，可以看的出来她挺开心的，不过我的初衷是天这么黑，担心她的安全！之后回到学校，我们进行了一天简单的应该算是约会吧，一起吃了鸡公煲，一起摘了一筐草莓，有的甜，有的酸。一","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":34,"path":"api/categories/life.json"}],"tags":[]},{"title":"剑指 offer-包含min函数的栈和栈的压入和弹出","slug":"C-面试问题准备：剑指-offer-包含min函数的栈和栈的压入和弹出","date":"2018-02-27T16:12:54.000Z","updated":"2018-03-14T13:21:45.000Z","comments":true,"path":"api/articles/C-面试问题准备：剑指-offer-包含min函数的栈和栈的压入和弹出.json","excerpt":"<h2 id=\"包含min函数的栈\"><a href=\"#包含min函数的栈\" class=\"headerlink\" title=\"包含min函数的栈\"></a>包含min函数的栈</h2><blockquote>\n<p>题目描述：定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的min函数，且在该栈中调用min,push以及pop的时间复杂度都是O(1)","keywords":null,"cover":"/images/minStack.png","content":null,"text":"包含min函数的栈题目描述：定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的min函数，且在该栈中调用min,push以及pop的时间复杂度都是O(1)看到这个问题我们会想到每一次将元素压入栈的时候对栈内所有的元素进行排序，将最小的元素放到栈顶，这样可以在O(1)时间","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":37,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":25,"path":"api/tags/C.json"}]},{"title":"2018-02-27","slug":"2018-02-27","date":"2018-02-27T15:31:50.000Z","updated":"2018-02-27T15:58:13.000Z","comments":true,"path":"api/articles/2018-02-27.json","excerpt":"<p>最近脑袋处于紧绷状态，随着春招的临近，北京的相关公司招聘信息发来很多。投了几家较为中意公司的简历，同时自己也铆足精神全心准备笔试和面试。","keywords":null,"cover":"/images/yongyong/小黄花.jpg","content":null,"text":"最近脑袋处于紧绷状态，随着春招的临近，北京的相关公司招聘信息发来很多。投了几家较为中意公司的简历，同时自己也铆足精神全心准备笔试和面试。同时最近在读书的时候努力提升自己的结构化思维能力，让自己在准备过程中梳理的知识更加由条理，方便记忆！看着手机里海信多媒体研发中心的新员工群，默默","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":34,"path":"api/categories/life.json"}],"tags":[]},{"title":"linux cpu、系统性能调试相关命令","slug":"C-面试问题准备：linux-cpu、系统性能调试相关命令","date":"2018-02-26T13:07:17.000Z","updated":"2018-03-14T13:21:03.000Z","comments":true,"path":"api/articles/C-面试问题准备：linux-cpu、系统性能调试相关命令.json","excerpt":"<h2 id=\"Linux下查看内存和CPU占用情况\"><a href=\"#Linux下查看内存和CPU占用情况\" class=\"headerlink\" title=\"Linux下查看内存和CPU占用情况\"></a>Linux下查看内存和CPU占用情况</h2><h3 id=\"ps-将某个时间点的进程运行情况选取下来\"><a href=\"#ps-将某个时间点的进程运行情况选取下来\" class=\"headerlink\" title=\"ps:将某个时间点的进程运行情况选取下来\"></a><strong><code>ps</code>:将某个时间点的进程运行情况选取下来</strong></h3><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ps</span> aux  &lt;== 查看系统所有进程数据</span><br><span class=\"line\"><span class=\"keyword\">ps</span> -lA &lt;== 也是能够查看所有系统的数据</span><br><span class=\"line\"><span class=\"keyword\">ps</span> axjf &lt;== 连同部分进程树状态</span><br></pre></td></tr></table></figure>","keywords":null,"cover":"/images/linuxImages/ps_l.png","content":null,"text":"Linux下查看内存和CPU占用情况ps:将某个时间点的进程运行情况选取下来1<br>2<br>3<br>ps aux  &lt;== 查看系统所有进程数据<br>ps -lA &lt;== 也是能够查看所有系统的数据<br>ps axjf &lt;== 连同部分进程树状态<br","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":37,"path":"api/categories/面试.json"}],"tags":[{"name":"linux","slug":"linux","count":7,"path":"api/tags/linux.json"}]},{"title":"关于命令--netstat tcpdump ipcs ipcrm的使用","slug":"C-面试问题准备：关于命令-netstat-tcpdump-ipcs-ipcrm的使用","date":"2018-02-26T05:34:33.000Z","updated":"2018-03-14T13:21:03.000Z","comments":true,"path":"api/articles/C-面试问题准备：关于命令-netstat-tcpdump-ipcs-ipcrm的使用.json","excerpt":"<h2 id=\"网络通信命令–netstat-tcpdump\"><a href=\"#网络通信命令–netstat-tcpdump\" class=\"headerlink\" title=\"网络通信命令–netstat tcpdump\"></a>网络通信命令–netstat tcpdump</h2><h3 id=\"netstat：查看网络连接状态\"><a href=\"#netstat：查看网络连接状态\" class=\"headerlink\" title=\"netstat：查看网络连接状态\"></a><strong>netstat：查看网络连接状态</strong></h3><blockquote>\n<p>如果某一个网络服务已经启动，但是就是无法进行连接，这个时候就需要查询一下网络接口所监听的端口（port），来看看是否真的已经启动，因为有的时候屏幕上显示的OK并不一定真的就是”OK”。","keywords":null,"cover":"/images/linuxImages/net_rn.png","content":null,"text":"网络通信命令–netstat tcpdumpnetstat：查看网络连接状态如果某一个网络服务已经启动，但是就是无法进行连接，这个时候就需要查询一下网络接口所监听的端口（port），来看看是否真的已经启动，因为有的时候屏幕上显示的OK并不一定真的就是”OK”。关于netstat的","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":37,"path":"api/categories/面试.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}]}]}