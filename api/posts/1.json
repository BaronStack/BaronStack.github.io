{"total":65,"pageSize":10,"pageCount":7,"data":[{"title":"2018-03-11","slug":"2018-03-11","date":"2018-03-11T15:33:03.000Z","updated":"2018-03-12T01:36:46.000Z","comments":true,"path":"api/articles/2018-03-11.json","excerpt":"<p>今天是喜欢糖永永同学的第60天，在这60天里我知道了她的很多故事和经历。看到了她的各种表情，生气、难过、开心、犹豫、纠结、茫然、撒娇。。。我知道了她是一个非常非常感性的姑娘。","keywords":null,"cover":null,"content":null,"text":"今天是喜欢糖永永同学的第60天，在这60天里我知道了她的很多故事和经历。看到了她的各种表情，生气、难过、开心、犹豫、纠结、茫然、撒娇。。。我知道了她是一个非常非常感性的姑娘。有人说，真正的爱是不会计算的。从来没有全心全意爱过一个人，从来没有想过一个人可以让我无时无刻不充满动力，又","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":27,"path":"api/categories/life.json"}],"tags":[]},{"title":"C++面试问题准备：如何实现守护进程","slug":"C-面试问题准备：如何实现守护进程","date":"2018-03-11T11:27:06.000Z","updated":"2018-03-11T11:55:31.000Z","comments":true,"path":"api/articles/C-面试问题准备：如何实现守护进程.json","excerpt":"<h3 id=\"守护进程\"><a href=\"#守护进程\" class=\"headerlink\" title=\"守护进程\"></a>守护进程</h3><p>守护进程也称精灵进程(Daemon)，是运行在后台的一种特殊进程。它独立于控制终端并且周期性的执行某种任务或等待处理某些发送的事件。Linux上的大多数服务器就是用守护进程实现的。","keywords":null,"cover":"/images/linuxImages/deamon.png","content":null,"text":"守护进程守护进程也称精灵进程(Daemon)，是运行在后台的一种特殊进程。它独立于控制终端并且周期性的执行某种任务或等待处理某些发送的事件。Linux上的大多数服务器就是用守护进程实现的。 守护进程可以解决产生死锁的一个必要条件，资源独占问题。即可以实现间接线程资源共享，对于打印","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":27,"path":"api/categories/面试.json"}],"tags":[{"name":"OS","slug":"OS","count":3,"path":"api/tags/OS.json"}]},{"title":"C++面试问题准备：什么函数不能作为虚函数","slug":"C-面试问题准备：什么函数不能作为虚函数","date":"2018-03-11T07:22:28.000Z","updated":"2018-03-11T07:57:47.000Z","comments":true,"path":"api/articles/C-面试问题准备：什么函数不能作为虚函数.json","excerpt":"<p><strong><font color=\"#DC143C\">虚函数</font></strong></p>\n<p>虚函数必须是类的非静态成员，即在类的成员函数生命中前面关键字为<code>virtual</code>的是虚函数。虚函数是为了实现的面向对象的多态（动态绑定）机制而提出来的。<br>即在程序运行过程中，进行对象所属类型的匹配，也是父类对象访问子类成员的方式。本质上还是为了实现代码复用以及项目的鲁棒性。","keywords":null,"cover":null,"content":null,"text":"虚函数虚函数必须是类的非静态成员，即在类的成员函数生命中前面关键字为virtual的是虚函数。虚函数是为了实现的面向对象的多态（动态绑定）机制而提出来的。<br>即在程序运行过程中，进行对象所属类型的匹配，也是父类对象访问子类成员的方式。本质上还是为了实现代码复用以及项目的鲁棒性","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":27,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":21,"path":"api/tags/C.json"}]},{"title":"C++面试问题准备:C++类的大小--sizeof(class)","slug":"C-面试问题准备-C-类的大小-sizeof-class","date":"2018-03-11T06:18:40.000Z","updated":"2018-03-11T08:00:16.000Z","comments":true,"path":"api/articles/C-面试问题准备-C-类的大小-sizeof-class.json","excerpt":"<h3 id=\"空类的大小\"><a href=\"#空类的大小\" class=\"headerlink\" title=\"空类的大小\"></a>空类的大小</h3><p><img src=\"/images/emptyClass.png\" alt=\"\"></p>\n<p>为什么空的什么都没有是1呢？","keywords":null,"cover":"/images/emptyClass.png","content":null,"text":"空类的大小 [Figure] 看到添加了静态变量的显示结果是和上一个显示的结果一样的。因为static变量对于整个类只有一份拷贝，且静态成员被编译器放在内存空间的全局存储区，但是在类实例化的时候只为类中的成员变量分配存储空间，所以它不会影响类的大小。","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":27,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":21,"path":"api/tags/C.json"}]},{"title":"C++面试问题准备：tcp/udp通信过程以及局域网内非阻塞的通信","slug":"C-面试问题准备：tcp-udp通信过程以及局域网内非阻塞的通信","date":"2018-03-11T04:52:45.000Z","updated":"2018-03-11T06:12:39.000Z","comments":true,"path":"api/articles/C-面试问题准备：tcp-udp通信过程以及局域网内非阻塞的通信.json","excerpt":"<h2 id=\"TCP和UDP协议的特点\"><a href=\"#TCP和UDP协议的特点\" class=\"headerlink\" title=\"TCP和UDP协议的特点\"></a>TCP和UDP协议的特点</h2><p><strong><font color=\"#DC143C\">TCP</font></strong></p>\n<ul>\n<li>支持面向链接的传输服务（相当于人们打电话，需要先建立一个用来传输双方信息的链接）</li>\n<li>支持字节流的传输（流模式 stream socket）</li>\n<li>支持全双工通信（允许通信双方的应用程序在任何时候都可以发送数据）</li>\n<li>支持建立多个并发的TCP链接</li>\n<li>支持可靠的传输服务（提供确认／重传与拥塞控制功能）","keywords":null,"cover":"/images/tcp.png","content":null,"text":"TCP和UDP协议的特点TCP支持面向链接的传输服务（相当于人们打电话，需要先建立一个用来传输双方信息的链接）支持字节流的传输（流模式 stream socket）支持全双工通信（允许通信双方的应用程序在任何时候都可以发送数据）支持建立多个并发的TCP链接支持可靠的传输服务（提供","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":27,"path":"api/categories/面试.json"}],"tags":[{"name":"网络通信","slug":"网络通信","count":1,"path":"api/tags/网络通信.json"}]},{"title":"C++面试问题准备：阻塞和非阻塞、同步和异步","slug":"C-面试问题准备：阻塞和非阻塞、同步和异步","date":"2018-03-10T14:11:46.000Z","updated":"2018-03-11T08:01:28.000Z","comments":true,"path":"api/articles/C-面试问题准备：阻塞和非阻塞、同步和异步.json","excerpt":"<h2 id=\"同步和异步主要针对C端\"><a href=\"#同步和异步主要针对C端\" class=\"headerlink\" title=\"同步和异步主要针对C端\"></a>同步和异步主要针对C端</h2><h3 id=\"同步\"><a href=\"#同步\" class=\"headerlink\" title=\"同步\"></a><strong><font color=\"#DC143C\">同步</font></strong></h3><p>所谓同步，就是在c端发出一个功能调用时，在没有得到结果之前，该调用就不返回。也就是必须一件一件事做,等前一件做完了才能做下一件事。","keywords":null,"cover":null,"content":null,"text":"同步和异步主要针对C端同步所谓同步，就是在c端发出一个功能调用时，在没有得到结果之前，该调用就不返回。也就是必须一件一件事做,等前一件做完了才能做下一件事。 例如普通B/S模式（同步）：提交请求-&gt;等待服务器处理-&gt;处理完毕返回 这个期间客户端浏览器不能干任何事异步当","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":27,"path":"api/categories/面试.json"}],"tags":[{"name":"OS","slug":"OS","count":3,"path":"api/tags/OS.json"}]},{"title":"C++面试问题准备：Linux下GDB命令调试程序","slug":"C-面试问题准备：Linux下GDB命令调试程序","date":"2018-03-10T12:46:32.000Z","updated":"2018-03-10T14:36:25.000Z","comments":true,"path":"api/articles/C-面试问题准备：Linux下GDB命令调试程序.json","excerpt":"<blockquote>\n<p>GDB是一个由GNU开源组织发布的、UNIX/LINUX操作系统下的、基于命令行的、功能强大的程序调试工具。<br> GDB中的命令固然很多，但我们只需掌握其中十个左右的命令，就大致可以完成日常的基本的程序调试工作</p>\n</blockquote>","keywords":null,"cover":"/images/linuxImages/vim.png","content":null,"text":"GDB是一个由GNU开源组织发布的、UNIX/LINUX操作系统下的、基于命令行的、功能强大的程序调试工具。<br> GDB中的命令固然很多，但我们只需掌握其中十个左右的命令，就大致可以完成日常的基本的程序调试工作 命令参数：file &lt;文件名&gt;：加载被调试的可执行程","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":27,"path":"api/categories/面试.json"}],"tags":[{"name":"linux","slug":"linux","count":6,"path":"api/tags/linux.json"}]},{"title":"C++面试问题准备：剑指 offer--第一个只出现一次的字符和数组中的逆序对","slug":"C-面试问题准备：剑指-offer-第一个只出现一次的字符和数组中的逆序对","date":"2018-03-10T06:53:12.000Z","updated":"2018-03-10T09:12:01.000Z","comments":true,"path":"api/articles/C-面试问题准备：剑指-offer-第一个只出现一次的字符和数组中的逆序对.json","excerpt":"<h2 id=\"第一个只出现一次的字符\"><a href=\"#第一个只出现一次的字符\" class=\"headerlink\" title=\"第一个只出现一次的字符\"></a>第一个只出现一次的字符</h2><blockquote>\n<p>题目描述：在字符中找出第一个只出现一次的字符。例如输入”abaccdeff”,则输出”b”;</p>\n</blockquote>\n<p>看到这个题目我们最直接的想法是从头到尾扫描这个字符串，当访问到某个字符时拿这个字符和后面的每个字符进行比较，如果在后面没有出现该字符，那么这个字符就是所要求的。但是每个字符都要与后面O(n)个字符进行比较，这样时间复制度就为o(n^2);","keywords":null,"cover":"/images/nixu01.jpg","content":null,"text":"第一个只出现一次的字符题目描述：在字符中找出第一个只出现一次的字符。例如输入”abaccdeff”,则输出”b”;看到这个题目我们最直接的想法是从头到尾扫描这个字符串，当访问到某个字符时拿这个字符和后面的每个字符进行比较，如果在后面没有出现该字符，那么这个字符就是所要求的。但是每","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":27,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":21,"path":"api/tags/C.json"}]},{"title":"C++面试问题准备：剑指 offer--在O(1)时间删除链表结点和打印1到最大的n位数","slug":"C-面试问题准备：剑指-offer-在O-1-时间删除链表结点和打印1到最大的n位数","date":"2018-03-10T05:12:36.000Z","updated":"2018-03-10T09:08:08.000Z","comments":true,"path":"api/articles/C-面试问题准备：剑指-offer-在O-1-时间删除链表结点和打印1到最大的n位数.json","excerpt":"<h2 id=\"在O-1-时间内删除链表结点\"><a href=\"#在O-1-时间内删除链表结点\" class=\"headerlink\" title=\"在O(1)时间内删除链表结点\"></a>在O(1)时间内删除链表结点</h2><blockquote>\n<p>题目描述：给定单向链表的头指针和一个结点指针，定义一个函数在O(1)时间删除该结点</p>\n</blockquote>\n<p>在单向链表中删除一个结点最常规的做法无疑是从链表的头结点开始，顺序遍历查找要删除的结点，并在链表中删除该结点。","keywords":null,"cover":"/images/deleteList.jpg","content":null,"text":"在O(1)时间内删除链表结点题目描述：给定单向链表的头指针和一个结点指针，定义一个函数在O(1)时间删除该结点在单向链表中删除一个结点最常规的做法无疑是从链表的头结点开始，顺序遍历查找要删除的结点，并在链表中删除该结点。但是这种删除方式需要遍历整个链表，时间复杂度为O（n）.为了","link":"","raw":null,"photos":[],"categories":[{"name":"面试","slug":"面试","count":27,"path":"api/categories/面试.json"}],"tags":[{"name":"C++","slug":"C","count":21,"path":"api/tags/C.json"}]},{"title":"2018-03-09","slug":"2018-03-09","date":"2018-03-09T15:46:27.000Z","updated":"2018-03-09T15:58:27.000Z","comments":true,"path":"api/articles/2018-03-09.json","excerpt":"<p>最近和她呆在一起的时间比较长，不过大多是在上自习。因为她要准备专八，我要准备找工作。但是今天她接受到了一个她前男友的快递，他送给她一条毛毯，说是看到西安有点冷。","keywords":null,"cover":null,"content":null,"text":"最近和她呆在一起的时间比较长，不过大多是在上自习。因为她要准备专八，我要准备找工作。但是今天她接受到了一个她前男友的快递，他送给她一条毛毯，说是看到西安有点冷。<br>是的，虽然她并没有答应我，但是我能感觉到她已经能够接受我了。只是看到这个快递，还是很难受，看到她的纠结犹豫了，我","link":"","raw":null,"photos":[],"categories":[{"name":"日记","slug":"life","count":27,"path":"api/categories/life.json"}],"tags":[]}]}