<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>那一刻 风情万种</title>
  
  <subtitle>我喜欢看你笑的样子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-16T15:55:44.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mr.张</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>很不错的景色</title>
    <link href="http://yoursite.com/2018/01/16/%E5%BE%88%E4%B8%8D%E9%94%99%E7%9A%84%E6%99%AF%E8%89%B2/"/>
    <id>http://yoursite.com/2018/01/16/很不错的景色/</id>
    <published>2018-01-16T14:54:31.000Z</published>
    <updated>2018-01-16T15:55:44.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="原来大家对老师是这样子的"><a href="#原来大家对老师是这样子的" class="headerlink" title="原来大家对老师是这样子的"></a>原来大家对老师是这样子的</h5><p>今天和实验室的学长学姐聊天，发现老师原来在他们心中是这样子的，听他们的描述似乎跟了他就要毁人生似的。<a id="more"></a></p><p>事情的起源是老师今天刚好有了空余时间，然后将我以及一个学长学姐叫过去谈话，给我详细讲了开题报告如何改进的方式方法，然后很正式得通知了我们明天<br>开始启动深度学习。当老师说出这句话时学长学姐一副不可理喻的表情，后来才知道所谓的启动就是自己去学习，因为在实验室目前为止还没有一个在深度学习<br>领域有一部分成果的同学。所以学长学姐就感觉老师很不可理喻，自己在实验室快两年时间了，就被老师强迫去写一些很无用的程序，平时既没有很好的技术指<br>导，也没有自己的提升空间，就是一个用自己时间给老师打工的木偶，最后自己学习到的东西针对找工作来说用处也不是很多。现在又要从零开始搞没有任何前<br>辈可以帮助的深度学习方面的知识，我从他们的内心看出了他们的疲惫。聊的时候他们极力劝我让我告诉想要保研到这个实验室的同学尽可能更换实验室，在这<br>里花费三年学到的东西真的是很少！</p><p>所以他们现在根本提不起兴趣来学习这些听起来很高大上的技术，就是抱怨老师的失败以及渴望有一个人能带领他们。</p><p>我听了感觉做为搞技术的老师，收到学生这样的评价真的是有点失败。</p><h5 id="其实我并不是很赞同"><a href="#其实我并不是很赞同" class="headerlink" title="其实我并不是很赞同"></a>其实我并不是很赞同</h5><p>虽然遗憾老师收到这样的评价，但是我个人觉得所谓现阶段的学习,以下几点很重要、</p><ul><li>自身努力（兴趣驱动）</li><li>好的学习环境（环境驱动）</li><li>好的学习方法（计算机学科：遇到问题—》解决问题—》学习总结）</li></ul><p>学长学姐的表现让我有点失望，虽然老师是没有太好的教育方式和技术支持，但是不能把所有造成自己现在各方面技术差的原因归咎于老师吧。我个人相信一个<br>法则和一个定律<strong>吸引力法则、墨菲定律</strong>，用在这里就是：只有自己去努力才能吸引到知识的到来，感觉自己越不会的知识越要相信自己一定可以搞懂，结合<br>吸引力法则就可以很好得提升自己啦。</p><p>然而学长学姐只有抱怨与负能量，我看见都有点累。确实，现在我对深度学习是真的一窍不通，什么线性回归看着就头疼，但是谁能想到一年前的我连输出素数<br>的一个十几行的小程序都不会写（大一和大二搞了副业，专业严重荒废），但是现在却可以在专业学习上小有体会，那么我相信我在接下来的时间里一定可以学<br>会深度学习在LSTM中的应用。</p><p>接下来就是图片时刻啦，很不错的景色呢，没想到这姑娘拍照水平还可以，越来越让我刮目相看了！当然我也越来越喜欢了，这里是美丽的海埂大坝：</p><p><img src="/images/2018-1-16-1.jpeg" alt=""></p><p><img src="/images/2018-1-16-2.jpg" alt=""></p><p><img src="/images/2018-1-16-3.jpeg" alt=""></p><p><img src="/images/2018-1-16-4.jpeg" alt=""></p><h6 id="Photoed-by-TangLoLo"><a href="#Photoed-by-TangLoLo" class="headerlink" title="Photoed by TangLoLo"></a>Photoed by TangLoLo</h6>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;原来大家对老师是这样子的&quot;&gt;&lt;a href=&quot;#原来大家对老师是这样子的&quot; class=&quot;headerlink&quot; title=&quot;原来大家对老师是这样子的&quot;&gt;&lt;/a&gt;原来大家对老师是这样子的&lt;/h5&gt;&lt;p&gt;今天和实验室的学长学姐聊天，发现老师原来在他们心中是这样子的，听他们的描述似乎跟了他就要毁人生似的。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>关于linux下不同脚本执行方式的区别</title>
    <link href="http://yoursite.com/2018/01/16/%E5%85%B3%E4%BA%8Elinux%E4%B8%8B%E4%B8%8D%E5%90%8C%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2018/01/16/关于linux下不同脚本执行方式的区别/</id>
    <published>2018-01-16T12:42:41.000Z</published>
    <updated>2018-01-16T13:10:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux系统下常见的脚本执行方式有</p><ul><li>source script</li><li>sh script</li><li>./script<a id="more"></a>其实执行方式相差不多的是第二种和第三种<br><code>sh script</code>和<code>./script</code>执行过程中都会使用一个新的bash（linux系统默认的脚本，当然还有csh,sh,zsh,tcsh,ksh等)<br>来执行脚本中的命令，也就是说<strong>script是在子进程的bash内执行的，当然在子进程执行结束后，进程中的各项变量和操作是不会传回到父进程</strong></li></ul><p>然而用<code>source script</code>来执行，那么结果就不一样了，source命令使得script的执行方式在父进程中执行，因此各项操作会在原本的bash中生效，<br>这也就是为什么要使得写入~/.bashrc中的设置生效需要使用命令source</p><p>各位可以编写这样一个脚本来尝试一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#Program:</span><br><span class="line">#       Users input 2 numbers,the program will input them.</span><br><span class="line">#History:</span><br><span class="line">#2018/01/16     Vigor   First Release</span><br><span class="line">PATH=/home/vigor/bin:/home/vigor/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span><br><span class="line">export PATH</span><br><span class="line"></span><br><span class="line">echo -e &quot;You need to input 2 numbers,i will cross them&quot;</span><br><span class="line">read -p &quot;first number:&quot; firstnum</span><br><span class="line">read -p &quot;second number:&quot; secnum</span><br><span class="line"></span><br><span class="line">total=$(($firstnum*$secnum))</span><br><span class="line"></span><br><span class="line">echo -e &quot;\nThe result of $firstnum x $secnum is ==&gt; $total&quot;</span><br></pre></td></tr></table></figure></p><p>将该脚本命名为sh03.sh，保存之后修改执行权限为所有用户可执行<br><code>chmod a+x sh03.sh</code></p><p>利用直接执行方式，即上面提到的后两种都可以来运行看看，<br>然后再用source执行脚本看看结果</p><p><img src="/images/sh03Cross.jpg" alt=""><br><img src="/images/sh03Source.jpg" alt=""></p><p>很明显能够看到在脚本中我们对变量total进行了赋值，但是利用<code>./script</code>执行之后在原来的脚本中total是空值，相反<br>利用<code>source</code>执行之后却可以在原来的脚本看到total的值。显然，利用source是在父进程中执行，而其他两种是在子进程中执行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux系统下常见的脚本执行方式有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;source script&lt;/li&gt;
&lt;li&gt;sh script&lt;/li&gt;
&lt;li&gt;./script
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>你开心我就很开心</title>
    <link href="http://yoursite.com/2018/01/15/%E4%BD%A0%E5%BC%80%E5%BF%83%E6%88%91%E5%B0%B1%E5%BE%88%E5%BC%80%E5%BF%83/"/>
    <id>http://yoursite.com/2018/01/15/你开心我就很开心/</id>
    <published>2018-01-15T05:28:39.000Z</published>
    <updated>2018-01-15T06:03:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/小永永.jpg" alt=""></p><p>今天去街上和妹妹买了衣服，买了一件很不错的皮衣。我觉得穿上它站在你身边会很舒服。之后去<br>看了电影《无问西东》。<a id="more"></a>针对电影的逻辑搭配，我觉得导演剽窃了《云图》的创意，采用看似四个独立的不同年代的故事，但是每个故事都对<br>之后的故事中的世界或者人物的命运产生了一定的影响。相对于云图的隐晦表达，它很明显得表达出了要表达的内容：<br>一个人无论做什么都应该听从内心最真实的：勇敢、正义、无谓、同情。</p><p>其中让我感触最深的是黄晓明和章子怡的故事演出，爱情上：当全世界都在反对你，只有真正站在你身边的人才是最爱你的人。做为男生：一定要有理想抱负，<br>尽力为包容我们的世界作出值得有用的贡献！陈鹏（黄晓明饰）为了王敏佳（章子怡饰）愿意抛弃自己所热爱的事业，但是当他看到敏佳和好友在一起以为敏佳有了<br>托付，毅然投身到核物理研究之中，但是当敏佳因为背叛和错误坠入深渊，遭万人唾骂，陈鹏赶了回来，从死神边缘将敏佳拉了回来。我喜欢陈鹏纯粹，执着得去做自己<br>喜欢的事情，去追逐自己喜欢的人。他在任何时候都在听从自己内心最真实的声音，无问西东，为了你我可以抛弃全世界！</p><p>总之我从电影中看到了”立德立言，无问西东”。</p><p>晚上给你photoshop了一张可爱的皮卡丘，作图的时候一直在笑，结果有几个地方没有做好。发给你，感受到了你的开心。那个时候内心真的是心潮澎湃，感觉你看到图片<br>时候的笑声就回荡在我的耳边，开心之极，希望每天都能给你一个小惊喜，让你每天都能开开心心的，那个时候我绝对是最开心的！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/小永永.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天去街上和妹妹买了衣服，买了一件很不错的皮衣。我觉得穿上它站在你身边会很舒服。之后去&lt;br&gt;看了电影《无问西东》。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>利用grep 配合数据流重定向查找处理大量文件查找问题</title>
    <link href="http://yoursite.com/2018/01/15/%E5%88%A9%E7%94%A8grep-%E9%85%8D%E5%90%88%E6%95%B0%E6%8D%AE%E6%B5%81%E9%87%8D%E5%AE%9A%E5%90%91%E6%9F%A5%E6%89%BE%E5%A4%84%E7%90%86%E5%A4%A7%E9%87%8F%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/01/15/利用grep-配合数据流重定向查找处理大量文件查找问题/</id>
    <published>2018-01-15T02:45:24.000Z</published>
    <updated>2018-01-15T03:30:51.000Z</updated>
    
    <content type="html"><![CDATA[<h6 id="情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题"><a href="#情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题" class="headerlink" title="情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题"></a>情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题</h6><ul><li>目标：正确使用正则表达式</li><li>前提：了解数据流重定向，以及通过子命令$(command)来处理文件名的查找<a id="more"></a></li></ul><h6 id="利用正则表达式查找系统中含有某些特殊关键字的文件"><a href="#利用正则表达式查找系统中含有某些特殊关键字的文件" class="headerlink" title="利用正则表达式查找系统中含有某些特殊关键字的文件"></a>利用正则表达式查找系统中含有某些特殊关键字的文件</h6><p><code>grep &#39;\*&#39; /etc/*</code> 查找/etc／一级目录文件下查找含有*的文件内容</p><blockquote><p>‘\<em>‘是正则表达式,代表的是”\</em>“这个字符，而”*“如果不用”\“进行转义表示的是0，或者无穷多个前一个字符。<br> /etc/<em>中”\</em>“表示的是脚本bash通配符，代表文件名</p></blockquote><p> 如果想要查找连同完整的/etc 目录数据，就需要这样做</p><p> <code>grep &#39;\*&#39; $(find /etc -type f)</code></p><blockquote><p>$(command)表示子命令，即先执行find查找文件，再执行grep 命令从文件中找出含有*的字符串</p></blockquote><p> 如果查找的是整个系统的文件,可以</p><p> <code>grep &#39;\*&#39; $(find / -type f)</code> </p><p> 这个时候可能会出现系统文件过多，而命令列的长度有限制系统会爆出<br> <code>-bash: /bin/grep: Argument list too long</code>的问题</p><p> 那么可以利用数据流重定向中的管道命令以及xargs命令，让grep每次处理文件的数目少点</p><p> <code>find / -type f | xargs -n 10 grep &#39;\*&#39;</code></p><p> 讲整个系统文件利用xargs分成10个一组，每次grep命令仅处理10个文件</p><p> 关于xargs命令的详细使用方式可以参考<a href="http://man.linuxde.net/xargs" target="_blank" rel="noopener">xargs</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题&quot;&gt;&lt;a href=&quot;#情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题&quot; class=&quot;headerlink&quot; title=&quot;情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题&quot;&gt;&lt;/a&gt;情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;目标：正确使用正则表达式&lt;/li&gt;
&lt;li&gt;前提：了解数据流重定向，以及通过子命令$(command)来处理文件名的查找
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>关于基础正则表达在linux下的应用</title>
    <link href="http://yoursite.com/2018/01/13/%E5%85%B3%E4%BA%8E%E5%9F%BA%E7%A1%80%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%9C%A8linux%E4%B8%8B%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2018/01/13/关于基础正则表达在linux下的应用/</id>
    <published>2018-01-13T15:52:44.000Z</published>
    <updated>2018-01-13T17:07:13.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="语系环境配置"><a href="#语系环境配置" class="headerlink" title="语系环境配置"></a>语系环境配置</h4><p>在Linux系统下，想要使用支持正则表达式的工具，比如awk,grep,sed,vi等，<a id="more"></a>那么就需要切换语系，因为<br>LANG=C 语系输出是a…zA…Z，这种形式是支持正则的字符取用规则，但是像zh_CN语系的输出则是aA.bB….zZ则不支持正则<br>的取用规则。</p><p>所以在使用工具前先确保当前脚本处于该语系配置环境，否则无法使用正则表达式。</p><p>利用命令</p><p><code>export LANG=C</code></p><p>保证当前语系环境。<br>同时执行命令</p><p><code>alias grep=&#39;grep --color=auto&#39;</code></p><p>alias命令是设置缩减命令，比如用alias ll=’ls -l’ 命令使得ll是ls -l的代替。<br>以上命令使得grep搜索到的字符串中的字符处于高亮</p><h4 id="正则表达式的基础练习"><a href="#正则表达式的基础练习" class="headerlink" title="正则表达式的基础练习"></a>正则表达式的基础练习</h4><p>以<code>grep</code>命令为例（在linux文件系统下文件处理都是以行为单位，建议大家找一个方便浏览的文本来在脚本中实践）</p><p><code>grep -n &#39;word&#39; /filename</code><br>查找filename文件中所有含有word的字符串（一行）,并显示行号</p><p><code>grep -in &#39;word&#39; /filename</code> 查找filname文件中所有含有word的字符串，并显示行号，且不区分word大小写，</p><p><code>grep -v &#39;word&#39; ／filename</code> 在filename中找出不含有word的字符串</p><p>以上貌似没有涉及到正则，大家不要急，只是为了让大家先熟悉一下grep命令。同时-i,-v,-n等参数都可以自由组合</p><h4 id="正则表达式的常用特殊符号（务必记住）"><a href="#正则表达式的常用特殊符号（务必记住）" class="headerlink" title="正则表达式的常用特殊符号（务必记住）"></a>正则表达式的常用特殊符号（务必记住）</h4><p>[:alnum:] 表示a..zA..Z0-9，即所有的字母数字</p><p>查找所有字母数字的字符串<code>grep -n [[:alnum:]] /filename</code><br>以下使用方式类似，需要将特殊符号放入”[]”中才能被识别</p><p>[:alpha:] 表示a..zA..Z，所有的字母</p><p>[:upper:] 表示A..Z，所有的大写字母</p><p>[:lower:] 表示a..z，所有的小写字母</p><p>[:digit:] 表示0-9，所有的数字</p><p>当然以上符号在应用的时候表示都为单个字符</p><h5 id="利用符号”-”来查找字符集合"><a href="#利用符号”-”来查找字符集合" class="headerlink" title="利用符号”[]”来查找字符集合"></a>利用符号”[]”来查找字符集合</h5><p><code>grep -n &#39;a[a-z]&#39; /filename</code> 符号”[]”中只能选择一个字符，即该命令 查找的是以a开头，a..z之间任意一个字符结尾的字符串，并显示行号</p><h5 id="利用符号”-”来查找字符串"><a href="#利用符号”-”来查找字符串" class="headerlink" title="利用符号”[^]”来查找字符串"></a>利用符号”[^]”来查找字符串</h5><p><code>grep -n &#39;[^a]aa&#39; /filename</code> 符号”[^]”代表的是不取^后的字符，该命令查找的是 不以a开头的,但其后跟有aa的字符串(baa之类)，并显示行号</p><h5 id="利用符号”-”来查找字符串-1"><a href="#利用符号”-”来查找字符串-1" class="headerlink" title="利用符号”.”来查找字符串"></a>利用符号”.”来查找字符串</h5><p><code>grep -n &#39;a..&#39; /filename</code> 符号”.”代表的是任意字符，该命令查找的是以a开头，其后跟有两个任意字符的字符串(abc、aaa,abb之类)，并显示行号</p><h5 id="利用符号”-”来查找字符串-2"><a href="#利用符号”-”来查找字符串-2" class="headerlink" title="利用符号”*”来查找字符串"></a>利用符号”*”来查找字符串</h5><p><code>grep -n &#39;aa* /filename</code> 符号”*”代表的是0个或者无穷多个的重复字符，该命令查找的是至少含有一个a的字符串，并显示行号</p><h5 id="利用符号”-”或者符号”-”查找字符串"><a href="#利用符号”-”或者符号”-”查找字符串" class="headerlink" title="利用符号”^”或者符号”$”查找字符串"></a>利用符号”^”或者符号”$”查找字符串</h5><p><code>grep -n &#39;^a&#39; /filename</code> 符号”^”单独拿出来则代表行首，与”[^]”不同，请注意区分，该命令查找的是以a开头的字符串。</p><p><code>grep -n &#39;a$&#39; /filename</code> 符号”$”表示行尾。该命令查找的是以a结尾的字符串。</p><h5 id="利用符号”-”查找范围字符串"><a href="#利用符号”-”查找范围字符串" class="headerlink" title="利用符号”{}”查找范围字符串"></a>利用符号”{}”查找范围字符串</h5><p>因为”{“ “}”在shell 中拥有特殊意义，所以使用的时候需要利用转义字符”\“来让命令解释器识别{}</p><p><code>grep -n &#39;a\{2,5\}&#39; /filename</code> 符号”{}”查找的是一个范围内的字符串，该命令查找的是2-5个连续a的字符串</p><blockquote><p>基于以上基本的正则操作，需要多加练习，多得进行组合操作才能够熟能生巧</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;语系环境配置&quot;&gt;&lt;a href=&quot;#语系环境配置&quot; class=&quot;headerlink&quot; title=&quot;语系环境配置&quot;&gt;&lt;/a&gt;语系环境配置&lt;/h4&gt;&lt;p&gt;在Linux系统下，想要使用支持正则表达式的工具，比如awk,grep,sed,vi等，
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>回眸一笑百媚生</title>
    <link href="http://yoursite.com/2018/01/13/%E5%9B%9E%E7%9C%B8%E4%B8%80%E7%AC%91%E7%99%BE%E5%AA%9A%E7%94%9F/"/>
    <id>http://yoursite.com/2018/01/13/回眸一笑百媚生/</id>
    <published>2018-01-13T14:52:18.000Z</published>
    <updated>2018-01-13T15:49:41.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/2.jpg" alt=""><br>看到这张照片我就想笑，挺想给你拍照的人是我，这样我就会距离你更近点，可以看到你那闪闪发光的眼睛！想到还有好长时间才能见到你，我就心慌慌！你把照片发给我，那我就只能对着屏幕仔细<br>寻找那颗已经成为一条线的亮晶晶的星星啦。<br><a id="more"></a></p><p>实在是没有想到那天你给我的像是手环的东西竟然是一个小人，原谅我现在才发现！看着它圆圆的脑袋，深红色的外衣，以及可爱的用小球代替的小手小脚<br>真是可爱极了！</p><p>你找到一颗石头要送我，其实看不出这个石头有多漂亮，也看不出它代表的含义，但是我知道这肯定是你很细心得挑选，所以很开心很开心！那天送你去机场<br>提到成都，提到《傲寒》，看到你莫名得沉默，莫名得靠在我的肩上，我知道你在想他！我想要更了解你，想要知道你和他发生的故事，是什么原因让你如此沉默，所以我问了你心中的<br>他是什么样子的，一个小胖子，肉嘟嘟的（原来他是你的初恋）！他追了你很长时间，当时，他可能很优秀，也很会疼你，你习惯了他的爱，甚至<br>你都不了解他到底是一个什么样子的人，你只因他疼你，和他在一起有一种从来没有的安全感，所以你选择了接受。可是后来发生的事情让你无法忍受，更多的是伤痛，我不说了。</p><p>看着你的眼泪，我很难过，但难过中我有点开心！ 小胖子，你很不错，这么好的姑娘便宜了我。虽然现在我并不知道你对我的感受是出于对他思念还是真正的有点喜欢我，我不在乎<br>，初恋本来就是很美好的，也是每个人深藏内心得那么柔光，永远无法忘记。就像我妈老讽刺我爸说他还无法忘记他的初恋一样，30年的过去了，他想起来仍然无法释怀！</p><p>对我来说，我心动了，因我看到了一个如此真实的你，你的笑，你的哭，你的每一句话都如此真实。喜欢你能对生活那么用心，对自己梦想如此执着，喜欢你能笑得那么开心！记得在大巴上，有一会你一直笑，看得我心都化了！<br>我希望有一天全世界都反对你站在身边支持你的人是我，我希望能够用自己的方式让你永远都保持这样的笑！那我也做了个决定，在接下来的几个月一定更加认真得学习，只为在你成绩出来<br>的那一刻我会根据你的选择来决定我的选择。别以为我没听见，你说你不想异地了，然后说下学期不见了！那我就不异地，至少我相信凭借自己的能力在任何地方都能生活的很好，我想待在你身边，听你的喜怒哀乐！</p><p>话有点多，假期准备学学素描，我要尽力画出最美的你，虽然我现在还不会素描～～～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;看到这张照片我就想笑，挺想给你拍照的人是我，这样我就会距离你更近点，可以看到你那闪闪发光的眼睛！想到还有好长时间才能见到你，我就心慌慌！你把照片发给我，那我就只能对着屏幕仔细&lt;br&gt;寻找那颗已经成为一条线的亮晶晶的星星啦。&lt;br&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>新的开端</title>
    <link href="http://yoursite.com/2018/01/13/%E6%96%B0%E7%9A%84%E5%BC%80%E7%AB%AF/"/>
    <id>http://yoursite.com/2018/01/13/新的开端/</id>
    <published>2018-01-12T16:09:52.000Z</published>
    <updated>2018-01-13T04:43:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/1.jpg" alt=""><br>首先非常感谢 Visugar 小姐姐写的blog<a href="https://www.cnblogs.com/visugar/p/6821777.html" target="_blank" rel="noopener">从零开始到搭建完整</a>，很细心，讲得也很全面。<br>利用hexo + github 搭建属于自己的博客。<br><a id="more"></a><br>过程中有一个步骤给大家提醒一下，就是创建自己的ssh 这一步的时候会在terminal中输入<br><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code><br>这里不要去更改youremail@example.com，就原样输入就可了</p><p>此外非常感谢唐lolo小同学，帮助我选择了好看的主题，哈哈！<br>当时她们家里的黑15（小奶狗）竟然给她暖床，羡慕的不行～～～</p><p>给大家看看最后的结果<br><img src="/images/blog.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/1.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;首先非常感谢 Visugar 小姐姐写的blog&lt;a href=&quot;https://www.cnblogs.com/visugar/p/6821777.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;从零开始到搭建完整&lt;/a&gt;，很细心，讲得也很全面。&lt;br&gt;利用hexo + github 搭建属于自己的博客。&lt;br&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/%E6%97%A5%E8%AE%B0/"/>
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
  </entry>
  
</feed>
