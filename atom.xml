<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>那一刻 风情万种</title>
  
  <subtitle>我喜欢看你笑的样子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-27T02:43:27.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mr.张</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++开发面试问题</title>
    <link href="http://yoursite.com/2018/01/26/C-%E5%BC%80%E5%8F%91%E9%9D%A2%E8%AF%95%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/01/26/C-开发面试问题/</id>
    <published>2018-01-26T14:47:27.000Z</published>
    <updated>2018-01-27T02:43:27.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="语言基础"><a href="#语言基础" class="headerlink" title="语言基础"></a>语言基础</h4><ul><li>OOP（封装、继承、多态） + V func 的实现，V table 的原理</li><li>const static的各种情况，分清const pointer 和pointer to const以及两者合体的形式<a id="more"></a></li><li>内存泄漏 三条规则。注意exception safe和smart pointer（提到思想：谁拥有这个指针）的解决方式</li><li>STL 至少了解allocator，常用的一些容器以及其实现原理</li><li>rail 了解一下，用来做什么</li></ul><h4 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h4><ul><li>进程管理 <ol><li>什么是进程</li><li>什么是context switch（上下文相关），干什么会触发它</li><li>cost是什么</li><li>虚拟内存和物理内存是什么</li><li>进程竞争的条件</li></ol></li><li>文件系统<ol><li>MVC 了解</li><li>堆栈的区别，给一个程序，要能够画出内存里程序运行的经过</li><li>并发编程，了解.管道的概念</li><li>cpu cache的运作，为什么很多数据结构或算法很好，运行却很慢</li><li>动态链接和静态链接的优缺点</li><li>编译的过程，从complie到linking. 做的事情</li><li>如何避免环形依赖</li></ol></li></ul><h4 id="编程习惯"><a href="#编程习惯" class="headerlink" title="编程习惯"></a>编程习惯</h4><ul><li>敏捷开发要了解，至少知道过程中有那些阶段code review,以及测试流程</li><li>如何manage大型C++code,怎么分模块合理得继承，怎么分模块测试</li><li>template以及metaprogramming了解</li><li>现场写程序能加const就加const,小程序全inline,能传ref就传ref,开头一定要有哨兵#ifndef #define #endif</li><li>出手要有namespace</li><li>STL能用就用，tranform的使用以及自己会写comparator</li></ul><h4 id="基础数据结构以及算法—-《剑指-offer》《编程之美》《程序员面试指南》内容搞懂足够面对BAT"><a href="#基础数据结构以及算法—-《剑指-offer》《编程之美》《程序员面试指南》内容搞懂足够面对BAT" class="headerlink" title="基础数据结构以及算法—-《剑指 offer》《编程之美》《程序员面试指南》内容搞懂足够面对BAT"></a>基础数据结构以及算法—-《剑指 offer》《编程之美》《程序员面试指南》内容搞懂足够面对BAT</h4>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;语言基础&quot;&gt;&lt;a href=&quot;#语言基础&quot; class=&quot;headerlink&quot; title=&quot;语言基础&quot;&gt;&lt;/a&gt;语言基础&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;OOP（封装、继承、多态） + V func 的实现，V table 的原理&lt;/li&gt;
&lt;li&gt;const static的各种情况，分清const pointer 和pointer to const以及两者合体的形式
    
    </summary>
    
      <category term="面试" scheme="http://yoursite.com/categories/%E9%9D%A2%E8%AF%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Python爬虫 爬取批量图片</title>
    <link href="http://yoursite.com/2018/01/26/Python%E7%88%AC%E8%99%AB-%E7%88%AC%E5%8F%96%E6%89%B9%E9%87%8F%E5%9B%BE%E7%89%87/"/>
    <id>http://yoursite.com/2018/01/26/Python爬虫-爬取批量图片/</id>
    <published>2018-01-26T10:40:37.000Z</published>
    <updated>2018-01-26T12:07:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>本部分的主要代码在<br><a href="https://github.com/BaronStack/Python-Reptitle/tree/master/reptitle_trying" target="_blank" rel="noopener">爬取批量图片到本地</a></p><h4 id="如何用python-爬取图片网站的图片"><a href="#如何用python-爬取图片网站的图片" class="headerlink" title="如何用python 爬取图片网站的图片"></a>如何用python 爬取图片网站的图片</h4><blockquote><p>这里的图片是按页显示的，所以它爬取的是每一页的图片</p></blockquote><ul><li>获取网页链接</li><li>利用正则提取以页为单位的html内容</li><li>获取每一页中图片的存储链接</li><li>利用循环下载保存<a id="more"></a></li></ul><p>导入的包如下：<br><figure class="highlight capnproto"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup <span class="comment"># 方便提取标签中的内容</span></span><br><span class="line"><span class="keyword">import</span> requests <span class="comment"># 向网页发送请求的包，获取网页内容</span></span><br><span class="line"><span class="keyword">import</span> re <span class="comment"># 正则表达式的包</span></span><br><span class="line"><span class="keyword">from</span> urllib.request <span class="keyword">import</span> urlopen <span class="comment"># 也是用来获取网页内容</span></span><br><span class="line"><span class="keyword">import</span> os <span class="comment"># 文件目录操作</span></span><br></pre></td></tr></table></figure></p><h5 id="获取网页链接，利用正则提取以页为单位的html链接"><a href="#获取网页链接，利用正则提取以页为单位的html链接" class="headerlink" title="获取网页链接，利用正则提取以页为单位的html链接"></a>获取网页链接，利用正则提取以页为单位的html链接</h5><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里也可以用语句 html = requests.get("http://www.ivsky.com/tupian/xuejing_t36/index_2.html").text来获取网页内容</span></span><br><span class="line"><span class="attr">html</span> = urlopen(<span class="string">"http://www.ivsky.com/tupian/xuejing_t36/index_2.html"</span>).read().decode(<span class="string">'utf-8'</span>) </span><br><span class="line"><span class="comment">#利用BeautifulSoup对html进行解析，从而可以获取网页的节点属性</span></span><br><span class="line"><span class="attr">soup</span> = BeautifulSoup(html, features=<span class="string">'lxml'</span>)</span><br><span class="line"><span class="comment">#找到以'panelist'为class的div标签的内容（这里存储的不同页面的html链接）</span></span><br><span class="line"><span class="attr">img_links</span> = soup.find_all(<span class="string">"div"</span>, &#123;<span class="string">"class"</span>: <span class="string">'pagelist'</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">#利用正则表达式，将标签中的链接取出来，形成列表。这里可以打开链接</span></span><br><span class="line"><span class="attr">course_links</span> = soup.find_all(<span class="string">'a'</span>, &#123;<span class="string">'href'</span>: re.compile(<span class="string">'/tupian/.*index_.\.html$'</span>)&#125;)</span><br><span class="line"><span class="comment">#这里的链接是没有http://跳转的，所以给其中每个链接都加上这样的跳转</span></span><br><span class="line"><span class="attr">resultURL</span> = [<span class="string">"%s%s"</span> %(<span class="string">'http://www.ivsky.com'</span>,links[<span class="string">'href'</span>]) for links in course_links]</span><br></pre></td></tr></table></figure><h5 id="获取每一页中图片的存储链接"><a href="#获取每一页中图片的存储链接" class="headerlink" title="获取每一页中图片的存储链接"></a>获取每一页中图片的存储链接</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#取得当前页面的URL</span><br><span class="line"><span class="selector-tag">html</span> = requests.get(URL).text</span><br><span class="line">#解析</span><br><span class="line">soup = BeautifulSoup(<span class="selector-tag">html</span>, <span class="string">'lxml'</span>)</span><br><span class="line">#找到以il_img为class的div标签</span><br><span class="line">img_ul = soup.find_all(<span class="string">'div'</span>, &#123;<span class="string">'class'</span>: <span class="string">"il_img"</span>&#125;)</span><br><span class="line">#查看找到的区域数量</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(len(img_ul)</span></span>)</span><br></pre></td></tr></table></figure><p>这里在利用浏览器的检查元素进行查找，在找的过程中尽可能将当前页面图片进行归类分析，找出其共有的标签属性，方便将所有的图片进行爬取</p><h5 id="利用循环下载保存"><a href="#利用循环下载保存" class="headerlink" title="利用循环下载保存"></a>利用循环下载保存</h5><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">os.makedirs(<span class="string">'./img/'</span>, exist_ok=True)<span class="comment">#创建保存的文件夹及存储目录，可以自行更改</span></span><br><span class="line">    <span class="keyword">for</span> ul <span class="keyword">in</span> img_ul:</span><br><span class="line">        imgs = ul.find_all(<span class="string">'img'</span>)<span class="comment">#找到 img标签</span></span><br><span class="line">        <span class="keyword">for</span> img <span class="keyword">in</span> imgs:</span><br><span class="line">            url = img[<span class="string">'src'</span>] <span class="comment">#找到src标签，因为其后跟着图片链接</span></span><br><span class="line">            r = requests.<span class="built_in">get</span>(url, stream=True)</span><br><span class="line">            image_name = url.<span class="built_in">split</span>(<span class="string">'/'</span>)[<span class="number">-1</span>] <span class="comment">#图片以最后一个'／'右边的内容明名，也可以自行命名</span></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">'./img/%s'</span> % image_name, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">                <span class="keyword">for</span> chunk <span class="keyword">in</span> r.iter_content(chunk_size=<span class="number">128</span>): <span class="comment">#将图片分块以数据流的方式直接写入到本地</span></span><br><span class="line">                    f.<span class="built_in">write</span>(chunk)</span><br><span class="line">            print(<span class="string">'Saved %s'</span> % image_name) <span class="comment">#打印保存的进度</span></span><br></pre></td></tr></table></figure><p>最后看看我们的结果：</p><p><img src="/images/python/scrap_images.png" alt="运行结果"></p><p><img src="/images/python/scrap_images_d.png" alt="保存结果"></p><p>所以<strong>妈妈再也不用担心我没有素材啦</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本部分的主要代码在&lt;br&gt;&lt;a href=&quot;https://github.com/BaronStack/Python-Reptitle/tree/master/reptitle_trying&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;爬取批量图片到本地&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;如何用python-爬取图片网站的图片&quot;&gt;&lt;a href=&quot;#如何用python-爬取图片网站的图片&quot; class=&quot;headerlink&quot; title=&quot;如何用python 爬取图片网站的图片&quot;&gt;&lt;/a&gt;如何用python 爬取图片网站的图片&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;这里的图片是按页显示的，所以它爬取的是每一页的图片&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;获取网页链接&lt;/li&gt;
&lt;li&gt;利用正则提取以页为单位的html内容&lt;/li&gt;
&lt;li&gt;获取每一页中图片的存储链接&lt;/li&gt;
&lt;li&gt;利用循环下载保存
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="爬虫" scheme="http://yoursite.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>2018-01-25</title>
    <link href="http://yoursite.com/2018/01/25/2018-01-25/"/>
    <id>http://yoursite.com/2018/01/25/2018-01-25/</id>
    <published>2018-01-25T01:57:43.000Z</published>
    <updated>2018-01-25T12:03:40.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="向死而生：我修的死亡学分—–李开复"><a href="#向死而生：我修的死亡学分—–李开复" class="headerlink" title="向死而生：我修的死亡学分—–李开复"></a>向死而生：我修的死亡学分—–李开复</h5><p>昨天晚上开始读这本书，内心一直很纠结。<a id="more"></a>虽然我现在并没有取得像李开复这样的专业成果，但是当我想出这个问题的一瞬间我知道我是急功近利的。</p><p>李开复在事业的最顶峰，人生的最高点遇到了淋巴癌第四期，因为他过于繁杂的工作压力以及对自己近乎苛刻的要求拖垮了他的身体。当他听到这个消息的时候经历了生死哲学大师伊丽莎白·库伯勒·罗斯指出的人类面对重大磨难时会经历的五个重要阶段：否认、愤怒、讨价还价、沮丧和接受。</p><p>然而凭借自己的不懈努力从第一阶段的化疗中挺了过来的时候，星云大师问他：你的人生目标是什么？李开复毫不犹豫的说：提高自己在这个世界的影响力，改变世界。星云大师摇头了。</p><p>看到这个问题我也在想我的人生目标是是什么，然而从脑海中划过无数念头依旧茫然一片（成为行业大佬，以后能够在互联网世界创下一片天地？开着豪车回到家乡，扬起额头让那些曾经瞧不起我们家的人知道自己有多傻？努力完成父母对自己的期盼，成为人中龙凤？努力完成朋友对自己的期盼，成为一个他们心中优秀的人？。。。。。。），可是我为什么要将自己的努力去放在别人心中的那个目标上。</p><p>昨晚我很用心得思考过倘若我的生命再剩下100天，我会做一些什么？（其实有点可笑，至少现在我没有经历很多事情，谈不上什么情怀之类的东西，但我不想活得这么累，为了得到别人的赞扬，别人的羡慕而让我将自己变得急功近利，渴望快速取得成就好去实现他们心中的目标）脑袋很痛，完全没法集中精神去进入场景。在梦里，我看到了，我还原了那个设想，做了以下的事情：</p><ul><li>和以前失去联系的兄弟一起喝酒，一起聊天，一起去回忆初中、高中时代的搞怪时光（大晚上去上网，十几个人被老师抓到，在教室外罚站；宿舍之间的混战昏天黑地，每天晚上进攻一个宿舍，我是主力；一同为了一个题目的解法奋战到凌晨三点；。。。）。</li><li>和失去联系的同桌道了一声”你应该瘦下来了吧！”，然后就被甩了一拳过来！</li><li>和现在喜欢的姑娘躺在草地上分辨天上的星座，然后第二天牵着她的手去看了埃菲尔铁塔，感受爱的宏伟与壮阔；在凯旋门下体会纳粹的嚣张；在巴黎圣母院瞻仰一代圣女的风采；踩在伦敦的本初子午线上嚣张得笑着，掌控时间；然后去非洲大草原一同蹦哒；在刚果盆地看到了非洲的热带雨林；在好望角为迪亚士加油助威；登上马达加斯看看那里的企鹅；再走一场郑和的归程，看看印度CHADAR的人坚强得活着；最后去夏威夷潜水。。。（貌似是穷游，因为没钱）</li><li>最后的时光就是为自己的父母洗脚，为他们做饭，为他们梳头，教他们健身运动，教他们上网（遇到问题怎么处理），挽着他们的手去开开心心得逛一整天的街，一直走，不再愁眉苦脸！</li></ul><p>醒来之后很晕，我想我最近需要放下手头的一切事情，搞清楚这个问题，不要自认为很明确的目标，确是自欺欺人得努力。</p><p>直到刚才读完这本书，我对自己人生重新有了定义：</p><ul><li><strong>拥有健康</strong></li><li><strong>对自己的亲人、爱人一定倍加珍惜</strong></li><li><strong>做真正的自己，在每一个阶段做让自己开心的事情，并绝对专注</strong></li><li><strong>活在当下，坦诚待人</strong></li></ul><p>以下是我读他这本书的过程中认为很好的一些话</p><blockquote><p>珍贵的生命旅程，应该抱着初学者的心态，对世界保持儿童般的好奇心，好好体验人生；让自己每天都比前一天有进步、有成长，不必改变别人，只要做事问心无愧、对人真诚平等，这就足够了。</p><p>与其让千万人过目即忘，不如让一两个人铭记在心。</p><p>眼不见，心不烦，不见可欲，使人心不乱；不烦不乱，就不会带来身心的压力，不然，压力是一切致病之源。</p><p>成功的定义因人而异，没有一定的标准，不需要和别人竞赛，你竞赛的对象是你自己，每天让自己比昨天更好一点，更积极得面对挑战，让内心更加平静。</p><p>再也不要把好东西留到特别的日子才用，你活着的每一天都是特别的日子</p><p>你若盛开，蝴蝶自来；你若精彩，天自安排。</p><p>能力越大，责任越大</p><p>成为某个特殊领域又有用领域的顶尖人才</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;向死而生：我修的死亡学分—–李开复&quot;&gt;&lt;a href=&quot;#向死而生：我修的死亡学分—–李开复&quot; class=&quot;headerlink&quot; title=&quot;向死而生：我修的死亡学分—–李开复&quot;&gt;&lt;/a&gt;向死而生：我修的死亡学分—–李开复&lt;/h5&gt;&lt;p&gt;昨天晚上开始读这本书，内心一直很纠结。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>2018-01-24</title>
    <link href="http://yoursite.com/2018/01/24/2018-01-24/"/>
    <id>http://yoursite.com/2018/01/24/2018-01-24/</id>
    <published>2018-01-24T12:40:04.000Z</published>
    <updated>2018-01-24T13:19:37.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天我看到了西安本年度的第一场雪，柔和而又不失优雅。</p><p><img src="/images/FirstSnowIn2018.jpg" alt=""><a id="more"></a></p><p>老师今天给我指点了开题报告，嗯，问题还挺多的。但是我个人实在没法用心去做这个感觉没什么用的开题报告，不就是一个毕业论文的准备嘛，我想不通为什么要花费这么大的精力去搞这个开题报告呢。</p><p>老师用他最擅长的股票黑屏软件给我分析股市动向，当然个人觉得这个东西如果能好好钻研一番以后对理财肯定有大用，不过目前我是没什么太大的兴趣，目前我的学习重点是为了一份好的工作，所以基础的知识得搞懂，还得把Tensorflow相关内容好好学学，这样下学期的比赛如果可以的话说不定还能够拿一些奖励。</p><p>对于股票这里实在是没法兴趣驱动了，而且老师真的是好啰嗦，你说你问题说完了好吧，为什么还要给我讲一些你也不是很擅长的东西，而且没有很强的逻辑，让我们双方都这么辛苦，你嗓子疼，我也耳朵累。</p><p>元谋竟然这么暖呀，天气还特好，那里真的是很舒服的一个地方呢。躺在吊床上，看着星星，感受着带有植物香味的微风吹过耳旁、发梢，然后在鼻梁停一会，轻轻得钻进了我的鼻孔-^_^-。那我就安静得做个美男子，当然旁边有美人陪就更好啦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天我看到了西安本年度的第一场雪，柔和而又不失优雅。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/FirstSnowIn2018.jpg&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>Tensorflow 训练变量的存储与加载</title>
    <link href="http://yoursite.com/2018/01/23/Tensorflow-%E8%AE%AD%E7%BB%83%E5%8F%98%E9%87%8F%E7%9A%84%E5%AD%98%E5%82%A8%E4%B8%8E%E5%8A%A0%E8%BD%BD/"/>
    <id>http://yoursite.com/2018/01/23/Tensorflow-训练变量的存储与加载/</id>
    <published>2018-01-23T13:23:20.000Z</published>
    <updated>2018-01-23T13:47:36.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/BaronStack/tensorflow_learning/tree/master/莫烦TensorflowProgram_Learning/implement_store_and_restore_saver" target="_blank" rel="noopener">TF代码</a></p><h4 id="本篇主要讲的是利用TensorFlow将我们训练好的变量-Weights-和-biases-或者loss…-存储下来，下次训练加载这次的存储"><a href="#本篇主要讲的是利用TensorFlow将我们训练好的变量-Weights-和-biases-或者loss…-存储下来，下次训练加载这次的存储" class="headerlink" title="本篇主要讲的是利用TensorFlow将我们训练好的变量(Weights 和 biases 或者loss…)存储下来，下次训练加载这次的存储 "></a>本篇主要讲的是利用TensorFlow将我们训练好的变量(Weights 和 biases 或者loss…)存储下来，下次训练加载这次的存储 <a id="more"></a></h4><p>存储主要利用函数<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">save_path = saver.save(sess, <span class="string">"my_net/save_net.ckpt"</span>)<span class="comment">#定义变量结果的存储位置,可放在程序最后位置</span></span><br></pre></td></tr></table></figure></p><p>存储结果运行如下（运行代码build_new_network.py）结果如下，<strong>该结果显示的是误差，即预测结果与真实结果之间的误差，越小说明预测结果约精确</strong>：</p><p><img src="/images/TensorflowImages/store.png" alt=""></p><p>加载主要利用函数：<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">saver = tf.train.Saver()</span><br><span class="line">sess = tf.Session() <span class="comment">#需要先定义Session()</span></span><br><span class="line">saver.restore(sess, <span class="string">"my_net/save_net.ckpt"</span>) <span class="comment">#从存储目录加载加载</span></span><br></pre></td></tr></table></figure></p><p>加载运行结果如下（运行代码build_network_restore.py，这个代码和上一个代码的功能一样，注意：<strong>变量初始化函数</strong>在加载的时候不需要添加），结果如下：</p><p><img src="/images/TensorflowImages/restore.png" alt=""></p><p>可以看到虽然并没又从上一个结果紧跟着开始运行，而训练依旧可以认为是接着上一次的运行结果开始训练</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/BaronStack/tensorflow_learning/tree/master/莫烦TensorflowProgram_Learning/implement_store_and_restore_saver&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;TF代码&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;本篇主要讲的是利用TensorFlow将我们训练好的变量-Weights-和-biases-或者loss…-存储下来，下次训练加载这次的存储&quot;&gt;&lt;a href=&quot;#本篇主要讲的是利用TensorFlow将我们训练好的变量-Weights-和-biases-或者loss…-存储下来，下次训练加载这次的存储&quot; class=&quot;headerlink&quot; title=&quot;本篇主要讲的是利用TensorFlow将我们训练好的变量(Weights 和 biases 或者loss…)存储下来，下次训练加载这次的存储 &quot;&gt;&lt;/a&gt;本篇主要讲的是利用TensorFlow将我们训练好的变量(Weights 和 biases 或者loss…)存储下来，下次训练加载这次的存储
    
    </summary>
    
      <category term="tensor flow" scheme="http://yoursite.com/categories/tensor-flow/"/>
    
    
      <category term="machine learning" scheme="http://yoursite.com/tags/machine-learning/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>2018-01-23</title>
    <link href="http://yoursite.com/2018/01/23/2018-01-23/"/>
    <id>http://yoursite.com/2018/01/23/2018-01-23/</id>
    <published>2018-01-23T11:30:14.000Z</published>
    <updated>2018-01-23T12:07:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>无善无恶心之体，有善有恶意之动。知善知恶是良知，为善去恶是格物。</p></blockquote><p>最近状态不是很好，内心有点浮躁了。昨天晚上做梦竟然做了一晚上的语文试卷，我都不知道自己在干什么，就坐在那努力得理解题目，看一个不知道怎么写，看一个不知道怎么写。今天早上起床让永永给分析了一下，<a id="more"></a>我去，她竟然还有相关的书籍，不愧是耳濡目染的唐小仙。然后她说得很有道理，总之我联想了一下最近状态，确实是压力有点大。</p><p>分析了一下，原因有三：</p><ul><li>在专业学习（tensorFlow）上太急，毕竟这个需要大量时间的积累与理解，而我想要用仅仅一个月时间达到别人花费那么长时间才达到的程度，根本就是自找苦吃。</li><li>缺少锻炼，压力无从释放。因为健身房关门了，最近也就回归到了三点一线的生活，回宿舍也就锻炼那么20来分钟，根本没有办法让压力很好得释放</li><li>强行给自己添加压力。看到身边一些伙伴进入到了BAT，我表示不服，北京的互联网公司还是很不错的，但是这种大厂毕竟需要很长时间的准备，所以就发现自己还有很多东西不会（C++语言基础，数据结构（手写代码），操作系统，计算机网络理论方面都欠缺很多），所以心慌慌。</li></ul><p>那么知道了原因，还是得调整调整，就像唐小仙说的：平和一点对待着急和紧张的心情。</p><p>解决办法：</p><ul><li>增加锻炼时间（每天150俯卧撑）</li><li>经常向唐小仙请教一些心理上的问题，她对心理学还真的是有点了解呢</li><li>素描得提上日程了，可以先学习一些基础的物体画—回家了再好好学习人物素描</li></ul><p>永永是个好菇凉，我该怎么才能更加深入她的内心呢，怎么才能体会她到底是一个什么样子的人呢。她喜欢狐妖之类的动漫，我看了几部感觉还真不错。我猜她喜欢涂山苏苏的形象，做事情笨笨的，看起来傻傻的，但是选择了一件事情就那么执着，对待身边的人又那么善良，渴望用自己微弱的力量成为一名合格的涂山狐妖，一次次的失败与打击都无法阻挠她对理想的追求，而涂山红红则是理性得执着得追求自己的理想。<strong>嗯，我貌似懂了一点什么，那是她自己。如果我对苏苏的分析没错的话我希望成为那个白（东方）月初！她这么笨，哪天把自己丢了，怎么去当老师，还是得看紧一点好呢</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;无善无恶心之体，有善有恶意之动。知善知恶是良知，为善去恶是格物。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最近状态不是很好，内心有点浮躁了。昨天晚上做梦竟然做了一晚上的语文试卷，我都不知道自己在干什么，就坐在那努力得理解题目，看一个不知道怎么写，看一个不知道怎么写。今天早上起床让永永给分析了一下，
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>2018-01-21</title>
    <link href="http://yoursite.com/2018/01/21/2018-01-21/"/>
    <id>http://yoursite.com/2018/01/21/2018-01-21/</id>
    <published>2018-01-21T13:43:30.000Z</published>
    <updated>2018-01-22T07:23:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>废话不多说，先上一个关于人工智能以及深度学习入门的一个大佬的博客链接<a href="https://morvanzhou.github.io/" target="_blank" rel="noopener">莫烦</a>，这两天一直在看他的教学视频，真的是受益匪浅。<a id="more"></a></p><p>我从他的视频讲解中了解到的一些理论知识如下：</p><ul><li>什么是神经网络</li><li>什么是梯度下降</li><li>什么是激励函数</li></ul><p>这一些基础且重要的概念，让我在实践过程中对神经网络有了更深一步的了解</p><p><strong>神经网络（NEURAL NETS）</strong> ：计算机中的神经网络是模拟人的神经网络的形成和功能的一种基于统计学、数学、计算机科学的模型。它可以对输入和输出数据之间的关系进行建模，从而产生特定且有用的概率数据。当然，神经网络通过很多层的数据处理，将输入的大量数据通过不断的反馈优化，降低其与真实值之间的差距，产生一个较高概率的结果。</p><p><strong>梯度下降 (GRADIENT DESCENT)</strong> ：神经网络在进行数据预测的时候会有一个误差方程，来降低真实结果与预测结果之间的误差，这个降低误差的过程就叫做梯度下降。当然Tensorflow中所拥有的API可以进类似于梯度下降的功能！</p><p><strong>激励函数（ACTIVATION FUNCTION）</strong> ：为了解决日常生活中不能用线性方程解决的问题（一般神经网络中数值关系理想状态下都是线性的，但是理想是美好的，现实是残酷的，那么就需要激励函数将理想中的数值关系强行掰弯），从而使得训练的输出结果拥有非线性的关系，提升预测结果概率。（TENSORFLOW 官网有大量的激励函数，在神经网CNN一般使用relu,在神经网络RNN常使用relu和tanh）</p><p>一些实际的Tensor flow程序可以参考莫烦的github，而且他的视频对程序的讲解很详细，一定要耐心琢磨。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;废话不多说，先上一个关于人工智能以及深度学习入门的一个大佬的博客链接&lt;a href=&quot;https://morvanzhou.github.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;莫烦&lt;/a&gt;，这两天一直在看他的教学视频，真的是受益匪浅。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>Sat Jan 20 2018 00:00:00 GMT+0800 (CST)</title>
    <link href="http://yoursite.com/2018/01/20/2018-01-20/"/>
    <id>http://yoursite.com/2018/01/20/2018-01-20/</id>
    <published>2018-01-20T09:36:54.000Z</published>
    <updated>2018-01-23T12:23:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天和学长学姐参加了一个关于人工智能的讲座，虽然听的过程中收获不是很多，但是在结束后和直系学长的聊天过程中让我受益匪浅。这个学长本科是在我们学校，不过他在牛津大学上过两年的博士，对于人工智能领域中的深度学习领域中的图像分割、识别、分类了解较为清楚。<a id="more"></a></p><p>当然今天是他做为主讲人，对我这种刚入门的小白来说所讲的内容让我云里雾里，因为很多东西都有涉及到极为深刻的理论，想要理解必须自己动手去尝试，同时对代数以及数理统计也要有足够的基础，听起来才不会很吃力。当然，目前我的状态是排除在外的。</p><p>学长讲完之后，我将自己这两天基础学习过程中遇到的问题进行了总结，在结束的时候就请教了学长。学长人很好，他应该算是很早进入人工智能领域的那部分人，我所遇到的这些基础问题（大多是关于程序上的问题）可能对学长来说很low,但是学长还是很耐心得给我分析讲解。告诉我神经网络无非就是通过输入的数据进行不同隐藏层的，经过训练，得到一个w值和b值，这两个值经过处理可以做为我们想要的数据结果。Tensorflow这个平台在前期学习的时候遇到的问题一定要多的google，去理解构建图的过程是什么样子的，为什么要这样构建，以及卷积在图中的作用是什么。只要把这些程序框架搞清楚，再去看程序就容易很多了，而程序中遇到的较难理解的函数就去查文档。</p><p>之后学长又给我分析了深度学习领域在行业中的广大前景，因为这个领域在当下火起来也就两年时间，它能够应用到社会生活的各行各业（工业：开矿—》钻机通过对前方矿藏的图片分析，自动调整挖掘方向。。。商业：股票市场：—》通过LSTM对股票走势进行分析，自动买入卖出，解放人力交易员。。。医学：病变部位识别—》通过CNN对病人的生病部位进行识别分类，更精确得检测病变部位。。。）的应用。但是目前各行各业还处于瓶颈期，因为这个深度学习领域的人才是在太少，当然该领域的门槛也是较高的（即使是学习计算机的，没有数学基础很难精通。学习过程中需要极大的耐心去一点点得优化学习）。</p><p>所以坚持这条路相对于去做软件开发，去搞网站后端之类的前人已经做得很多的方面实在是没有可以创新的地方，还不如去聚焦当下这个领域努力学习几年。至少这个领域是在为社会前沿做真正的有用的贡献。然后他又提到他以前在牛津学习的时候，周围很多行业大佬，但是大家在学习上那叫一个用功呀，他那个时候每天也是三点一线，晚上2.00多睡觉，早上6.00起床，之后去图书馆看书查资料或者跟着团队做事情。下午就会去健身房锻炼锻炼，他说学习计算机的人一定要有一个好身体，不然熬夜3天要休息一个月，这样就会损失很多。他觉得这段时间是他学习进步最快的一段时间，当时满脑子只有一个东西，只去想一个东西，然后自然而然就更加深入了。</p><p>现在他说如果他愿意，华为会给他40W年薪，并立即分给他一个50W预付的房子，如果在工作中做出成绩，2年房子就归他了。但是他想留校，他不愿意花费时间经历去做一些业务的事情，干几十年依旧是那么个职位，更愿意去在学校做做项目，全心投入领域的学习过程中。哎，这可能就是现在的高帅即将富的人吧：学长185的个子，长得很帅，又有能力，待人又好。</p><p>听了学长一番经历和未来专业的发展我感慨良多，虽然学长比我大6岁，但是6年后我能有他这样的自信嘛！我相信可以有的，我会扎根现在，不会去想什么专业上的假大空的事情，一步一个脚印扎扎实实得坚持走下去。 </p><p>接下来的时间就是要好好参考一下北京的公司了，同时学习deep learning之外要刷刷牛客网上的题目，如果她愿意和我在一起，为了她的好生活至少拼一把。昨天在牛客网上看到一个研三的大佬，很多大企的offer，原因是：工作易找，佳人难求。他是为了和他女朋友在一个地方，才会广投简历。那我也相信我不差，佳人难求呀！</p><p>昨天晚上又给她要了一些她以前的照片，笑死我了。她的小肥脸一直陪伴了她好久呢，虽然现在好像不明显了。。。</p><p><img src="/images/yongyong/senior01.jpg" alt="高中"></p><p><img src="/images/yongyong/senior02.jpg" alt="高中"></p><p><img src="/images/yongyong/baseball.jpg" alt="高中"></p><p><img src="/images/yongyong/serious.jpg" alt="大学，大二或者大三"></p><p><img src="/images/yongyong/swim.jpg" alt="游泳"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天和学长学姐参加了一个关于人工智能的讲座，虽然听的过程中收获不是很多，但是在结束后和直系学长的聊天过程中让我受益匪浅。这个学长本科是在我们学校，不过他在牛津大学上过两年的博士，对于人工智能领域中的深度学习领域中的图像分割、识别、分类了解较为清楚。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>恋爱经验得提升了</title>
    <link href="http://yoursite.com/2018/01/19/%E6%81%8B%E7%88%B1%E7%BB%8F%E9%AA%8C%E5%BE%97%E6%8F%90%E5%8D%87%E4%BA%86/"/>
    <id>http://yoursite.com/2018/01/19/恋爱经验得提升了/</id>
    <published>2018-01-19T01:34:54.000Z</published>
    <updated>2018-01-20T07:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近被Tensorflow快逼疯了，没有想到这个东西这么难，可能是自己的数学基础还不够吧。自从上次永永说我每天找一个时间段和她聊天可能会烦到她，感觉和她聊天没有以前那种轻松了。<a id="more"></a>我思考了一下我的心理，因我我太过于急躁，太过于盲目表达，她的内心比较纠结，还不愿意上一段感情没有缓过来就很快得接受下一段的感情，这让她体会到两个人在一起相互了解是有多么重要。</p><p>待在家里这件事情本来就是平淡，在家里如果不是什么特殊的日子，应该就是三点一线的生活形式，不需要每天都聊那么长时间，最后无话可说岂不是很尴尬。又想起给她看了我写的那篇日记，真是不理智，我不是一个愿意作空头承诺的人，我更希望拿出一个让她开心的结果再加上我对她的喜欢来打动她，而不是让她先看到一个承诺～～</p><p>尤其是在家里，一定要有个人的生活空间，我们现在还不够了解，还达不到那种随意展现自己不好一面的程度，所以想了一下这段时间我还是不要主动联系她的好。<br>昨天晚上给她发晚安 谁知道她竟然没睡，玩了一局万恶的贪吃蛇没有回复她消息，导致她整晚失眠。但是我一到晚上大脑就处于停滞状态，根本想不出怎么让她<br>睡觉的法子，fucked.</p><p>此外，女生心里好难猜啊，看她的朋友圈我只能看出她表达的表面内容，但是我看不出她想要表达的深层意思以及她的心情，这可能就是直男的悲哀吧，好难受～～～</p><p>算了，假期要好好提升恋爱经验了，回去好好问问同学，不要再错过了。至少让她感觉和我在一起很舒服就行，别压力山大或者心情不好。</p><p>对了，今天无意中看到朋友圈有人晒健身照，我当时就怒了，敢在我这健身老手的朋友圈晒健身照，要不要给她秀一波，最后惊出一身冷汗，不行，永永说不要看到我不穿衣服的照片，哎，那就算了。小子，我忍了，等什么时候她愿意看了我就要秀死你！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近被Tensorflow快逼疯了，没有想到这个东西这么难，可能是自己的数学基础还不够吧。自从上次永永说我每天找一个时间段和她聊天可能会烦到她，感觉和她聊天没有以前那种轻松了。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>最后的健身房之日</title>
    <link href="http://yoursite.com/2018/01/18/%E6%9C%80%E5%90%8E%E7%9A%84%E5%81%A5%E8%BA%AB%E6%88%BF%E4%B9%8B%E6%97%A5/"/>
    <id>http://yoursite.com/2018/01/18/最后的健身房之日/</id>
    <published>2018-01-18T12:33:07.000Z</published>
    <updated>2018-01-20T07:34:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天是在学校待在健身房的最后一天，相对来说我的心里还是极度开心的。因为我看到我自身两个月的变化，从找完工作11月份开始到现在，平均每周去健身房6次，从减脂到增肌，这里的两个月对我的身体来说是变化最大的,这里给大家看看我的目前的健身结果。<a id="more"></a></p><p><img src="/images/健身02.jpg" alt="目前的上身"></p><p>我看到了自己推举的重量的提升，我看到了自己胸肌、背肌、腹肌的点点滴滴的变化。每一份部分肌肉群的增长都是我的悉心培育，就跟父母看着优秀的孩子长大一样，那种莫名自豪由衷而发。</p><p>那接下来我会更加努力去提升自己的自律性，尽可能得保证接下来以及回家的日子不胖就好，不过难度很大，毕竟吃得多啊～～～</p><p>最近发现处于恋爱中的人，对方的每一个动作每一个与自己相关的事情都会牵动我的心弦。</p><p>我将她置顶，这样我就可以在自己空闲时候第一个点开她的朋友圈，看看她在做什么，蓦然发现自己已经对其他人的推文毫不关心了，朋友圈里只有她。比如：今天她听了周杰伦的新歌《等你下课》，貌似她挺喜欢周杰伦的（以后有机会确认一下）。然后她下午又给妈妈做了个醋溜白菜的菜，看起来还挺辣的，不过感觉色香味俱全呢，</p><p><img src="/images/yongyongdecai.jpg" alt="辣椒拌白菜"></p><p>哎～～～不知道以后我能吃到不。最近不怎么看微信读书了，不过我喜欢发想法，就是不让自己以前看的书给忘了。然后永永给我点赞，很开心很开心呢。她说她回家也要像我一样制定一个时间计划表，那就说明她是比较赞同我现在的生活的。想到昨天晚上12.00多了她还要去学习专八，我都吓到了，太努力了吧，不过她说她爸爸对她要求比较高呢，那我感觉压力更大了，对她要求都这么高，那对她的男朋友呢？我靠，我在想什么呢，这是以后的事情，只要我能吸引住她，那我一定会成为她爸爸心中的女婿的。</p><p>是时候做一波总结啦，永永喜欢什么呢，有一些还不确定，我只能先列出来，以后再改善吧：</p><blockquote><ul><li>萌萌哒的小动物肯定是第一个（皮卡丘、黑15）</li><li>她喜欢粉色（上次一起吃饭她说把蓝色的餐巾纸换成粉色的的就好啦）</li><li>她喜欢樱花（她说交大春天的樱花开了，她自己去看），不对不对，貌似这句话我没有记忆正确（<strong>不确定</strong>），不过她肯定喜欢美丽的花</li><li>她喜欢一些可爱的小植物(宿舍里养了一堆，假期回家前还专门给它们做了供水装置，真是用心呢，我喜欢)</li><li>她喜欢吃蓝莓（蓝莓冰淇淋，蓝莓酸奶）</li><li>她喜欢吃橙子</li><li>她喜欢尝试新的事物（吃的、玩的）</li><li>她其实并不喜欢说太多的话</li><li>她喜欢人类学，她的梦想是去做一名老师</li><li>她喜欢周杰伦（<strong>不确定有多喜欢</strong>）</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天是在学校待在健身房的最后一天，相对来说我的心里还是极度开心的。因为我看到我自身两个月的变化，从找完工作11月份开始到现在，平均每周去健身房6次，从减脂到增肌，这里的两个月对我的身体来说是变化最大的,这里给大家看看我的目前的健身结果。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>linux下压缩命令`gizp`,`bzip2`,打包命令`tar`以及三个变动时间的意义</title>
    <link href="http://yoursite.com/2018/01/18/linux%E4%B8%8B%E6%89%93%E5%8C%85%E5%91%BD%E4%BB%A4tar%E4%BB%A5%E5%8F%8A%E4%B8%89%E4%B8%AA%E5%8F%98%E5%8A%A8%E6%97%B6%E9%97%B4%E7%9A%84%E6%84%8F%E4%B9%89/"/>
    <id>http://yoursite.com/2018/01/18/linux下打包命令tar以及三个变动时间的意义/</id>
    <published>2018-01-18T08:25:27.000Z</published>
    <updated>2018-01-18T09:58:39.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="常见的压缩文件扩展名有以下几个"><a href="#常见的压缩文件扩展名有以下几个" class="headerlink" title="常见的压缩文件扩展名有以下几个"></a>常见的压缩文件扩展名有以下几个</h5><ol><li><font color="#0099ff">*.z    <strong>compress程序压缩文件</strong></font></li><li><font color="#0099ff">*.gz     <strong>gzip程序压缩文件</strong></font></li><li><font color="#0099ff">*.bz2    <strong>bzip2程序压缩文件</strong></font></li><li><font color="#0099ff">*.tar    <strong>tar程序打包数据，没有压缩</strong>        </font></li><li><font color="#0099ff">*.tar.gz <strong>tar打包的数据，经过gzip压缩</strong></font></li><li><font color="#0099ff">*.tar.bz2 <strong>tar打包的文件，经过bzip2压缩</strong><a id="more"></a></font></li></ol><h5 id="利用gzip和bzip2进行单个文件的压缩与解压缩"><a href="#利用gzip和bzip2进行单个文件的压缩与解压缩" class="headerlink" title="利用gzip和bzip2进行单个文件的压缩与解压缩"></a>利用<code>gzip</code>和<code>bzip2</code>进行单个文件的压缩与解压缩</h5><p>命令如下（建议大家在自己的终端上进行实践）：</p><p>描述：<strong>将文件<code>/etc/manpath.config</code>复制到<code>/tmp</code>目录下，进行<code>gzip</code>压缩，显示压缩比，并查看压缩后的文件内容。最后进行解压缩</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/manpath<span class="selector-class">.config</span> /tmp</span><br><span class="line">cd /tmp</span><br><span class="line">gzip -v manpath<span class="selector-class">.config</span>  #-v参数是显示压缩比</span><br><span class="line">ll /etc/manpath<span class="selector-class">.config</span> ./manpath<span class="selector-class">.config</span><span class="selector-class">.gz</span> #查看压缩前后文件的大小变化</span><br><span class="line">zcat manpath<span class="selector-class">.config</span> #查看被压缩的文件内容</span><br><span class="line">gzip -d manpanth<span class="selector-class">.config</span><span class="selector-class">.gz</span> #-d参数是解压缩</span><br><span class="line"></span><br><span class="line">gzip -<span class="number">9</span> -c manpath<span class="selector-class">.config</span> &gt; manpath<span class="selector-class">.config</span><span class="selector-class">.gz</span> #-<span class="number">9</span> 是压缩等级最慢，但是压缩比最高 -c参数将压缩的结果输出到屏幕，这里用到了重定向符号<span class="string">"&gt;"</span></span><br></pre></td></tr></table></figure><p>以上过程中可以利用命令<code>ll</code>查看文件属性（关注它与原来文件相比的大小变化）</p><p>描述：<strong>利用上面的文件<code>manpath.config</code>文件，用bzip2进行压缩，同时对比它与gzip压缩结果的不同，查看它的压缩文件内容</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bzip2 -v manpath.config</span><br><span class="line">ll /etc/manpath<span class="selector-class">.config</span> ./manpath<span class="selector-class">.config</span><span class="selector-class">.gz</span> ./manpath<span class="selector-class">.config</span><span class="selector-class">.bz2</span> #查看两个压缩文件相比与原文件的大小变化</span><br><span class="line">bzcat manpath<span class="selector-class">.config</span><span class="selector-class">.bz2</span> #查看bz2压缩文件的内容</span><br><span class="line">bzip2 -d manpath<span class="selector-class">.config</span><span class="selector-class">.bz2</span> #解压缩</span><br></pre></td></tr></table></figure><h5 id="利用tar命令对多个文件进行打包，压缩，解压缩"><a href="#利用tar命令对多个文件进行打包，压缩，解压缩" class="headerlink" title="利用tar命令对多个文件进行打包，压缩，解压缩"></a>利用<code>tar</code>命令对多个文件进行打包，压缩，解压缩</h5><p>一般<code>bzip2</code>和<code>gzip</code>只能对单个文件进行进行压缩，但是<code>tar</code>可以对多个文件进行操作</p><p>命令：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -jcv -f /root/etc<span class="selector-class">.tar</span><span class="selector-class">.bz2</span> /etc #将/etc打包为etc<span class="selector-class">.tar</span><span class="selector-class">.bz2</span>,并且存放在/root下 -j参数表示以bzip2压缩程序压缩 -c进行打包，-v显示打包的文件</span><br><span class="line">tar -jtv -f /root/etc<span class="selector-class">.tar</span><span class="selector-class">.bz2</span> #查询打包中的文件名。可以配合grep命令进行查找</span><br><span class="line">tar -jxv -f /root/etc<span class="selector-class">.tar</span><span class="selector-class">.bz2</span> #直接解压到本地目录</span><br><span class="line">tar -jxv -f /root/etc<span class="selector-class">.tar</span><span class="selector-class">.bz2</span> -C /tmp #-C参数是解压到指定目录</span><br></pre></td></tr></table></figure><p>如果想要将以bzip2进行压缩的文件改为以gzip进行压缩的话只需要将参数j换为z即可</p><p>可以利用<code>grep</code>命令进行查找，在压缩文中查找指定文件，然后解压的时候只需要解压我们需要的文件就可以</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -jtv -f <span class="regexp">/root/</span>etc.tar.bz2 | grep <span class="string">'shadow'</span> <span class="comment">#找到shadow文件</span></span><br><span class="line">tar -jxv -f <span class="regexp">/root/</span>etc.tar.bz2 etc<span class="regexp">/shadow #解压出单独的shadow文件</span></span><br></pre></td></tr></table></figure><p>基本上常用的tar命令这么多，如果大家还想要了解更多tar 相关的内容，可以参考<a href="https://www.cnblogs.com/xiaochina/p/5801959.html" target="_blank" rel="noopener">tar命令详解</a></p><h5 id="最后说一下Linux系统中三个主要的时间参数"><a href="#最后说一下Linux系统中三个主要的时间参数" class="headerlink" title="最后说一下Linux系统中三个主要的时间参数"></a>最后说一下Linux系统中三个主要的时间参数</h5><p><code>mtime</code> <strong>modification time</strong></p><p>当该文件内容修改时，就会更新这个时间。内容数据值的是文件的内容，不是文件的属性或者权限</p><p><code>ctime</code> <strong>status time</strong></p><p>当文件”状态”改变时就会更新这个时间，状态指的是：权限，属性</p><p><code>atime</code> <strong>access time</strong></p><p>当该文件的”内容”被取用的时候会更新这个时间，比如我们使用<code>cat</code>去查看该文件的时候就会更新该文件的atime,即文件被读的时候会更改该时间</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;常见的压缩文件扩展名有以下几个&quot;&gt;&lt;a href=&quot;#常见的压缩文件扩展名有以下几个&quot; class=&quot;headerlink&quot; title=&quot;常见的压缩文件扩展名有以下几个&quot;&gt;&lt;/a&gt;常见的压缩文件扩展名有以下几个&lt;/h5&gt;&lt;ol&gt;
&lt;li&gt;&lt;font color=&quot;#0099ff&quot;&gt;*.z    &lt;strong&gt;compress程序压缩文件&lt;/strong&gt;&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;#0099ff&quot;&gt;*.gz     &lt;strong&gt;gzip程序压缩文件&lt;/strong&gt;&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;#0099ff&quot;&gt;*.bz2    &lt;strong&gt;bzip2程序压缩文件&lt;/strong&gt;&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;#0099ff&quot;&gt;*.tar    &lt;strong&gt;tar程序打包数据，没有压缩&lt;/strong&gt;        &lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;#0099ff&quot;&gt;*.tar.gz &lt;strong&gt;tar打包的数据，经过gzip压缩&lt;/strong&gt;&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font color=&quot;#0099ff&quot;&gt;*.tar.bz2 &lt;strong&gt;tar打包的文件，经过bzip2压缩&lt;/strong&gt;
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>关于tensor flow废弃的API</title>
    <link href="http://yoursite.com/2018/01/18/%E5%85%B3%E4%BA%8Etensor-flow%E5%BA%9F%E5%BC%83%E7%9A%84API/"/>
    <id>http://yoursite.com/2018/01/18/关于tensor-flow废弃的API/</id>
    <published>2018-01-18T03:39:19.000Z</published>
    <updated>2018-01-18T03:48:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天开始写一些tensor flow 的代码，发现官网上的一些样例程序无法运行，会出现一些找不到函数的情况。查阅之后发现原来是官网对tensor flow 包进<br>行了更新，只是还没有将官网的程序进行更新。<a id="more"></a></p><p>主要是以下几个API： </p><p><code>tf.mul</code>和<code>tf.sub</code>和<code>tf.neg</code> 取乘运算，取减运算，取负运算</p><p>更改为</p><p><code>tf.multiply</code>和<code>tf.subtract</code>和<code>tf.negative</code>，这样在进行基础矩阵运算的时候就可以使用这些函数正常进行运算    </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天开始写一些tensor flow 的代码，发现官网上的一些样例程序无法运行，会出现一些找不到函数的情况。查阅之后发现原来是官网对tensor flow 包进&lt;br&gt;行了更新，只是还没有将官网的程序进行更新。
    
    </summary>
    
      <category term="tensor flow" scheme="http://yoursite.com/categories/tensor-flow/"/>
    
    
      <category term="machine learning" scheme="http://yoursite.com/tags/machine-learning/"/>
    
  </entry>
  
  <entry>
    <title>今天有点累</title>
    <link href="http://yoursite.com/2018/01/17/%E4%BB%8A%E5%A4%A9%E6%9C%89%E7%82%B9%E7%B4%AF/"/>
    <id>http://yoursite.com/2018/01/17/今天有点累/</id>
    <published>2018-01-17T15:25:10.000Z</published>
    <updated>2018-01-17T15:57:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天又有点累，真是对自己无语了。<br>看到妹妹在家里吃着妈妈做的大餐，我却只能在学校啃着干面包，心里不平衡呀。<a id="more"></a>而且她竟然给我发她吃饭时候的疯狂状态，哎呀，我都难受死了。<br>不过谁让这是咱自己的选择嘞，那就要坚持下去，毕竟每天还是挺充实的。心里有了一个人，做事情的时候总是会比以前多付出一些努力。</p><p>妈妈说爱一个人是一件很幸福的事情，这句话我体会到了。很感谢有一个这样的妈妈，虽然妈妈是农民，但是她以前是可以上大学的，只是因为没有后台被别人<br>给代替了，这是她一生最为遗憾的事情！她从来没有强迫我做一些不喜欢的事情，随着年龄和学历的增长，妈妈再也不能对我的学习进行辅导了，但是她却可以<br>辅导我的人生。她总告诉我和妹妹：先学会做人，再去学做事。我从妈妈的身上看到了做为一名传统中国女性所拥有的傲气与坚韧，她支持我去做我喜欢的事情，<br>追求我心中所喜欢的人，可能这是天下所有母亲内心的写照：希望自己的孩子开心快乐。<br>想回家吃饭，吃妈妈做的炒土豆丝，煎豆腐，醋溜白菜。。。。。。不过现在还是得努力学习。</p><p>下午本来想给学长秀一波操作，在Linux下配置pycharm的tensor flow开发环境。因为我是在自己电脑上配置好了的，结果发现问题完全不一样，自信满满得<br>上去，最后赤裸裸得打脸，解决不了。妈蛋，谁让自己作，还好学长人比较好，要不然我就得受点打击了。不过还好，一些linux的基础命令掌握还算牢固，没有<br>出什么差错。</p><p>小小的总结一下：</p><ul><li>做事情三思而后行，每一次在大众面前的呈现都是自己一段时间的积累，万不可掉以轻心</li><li>重要的知识一定要掌握牢固，最好让它成为自己的潜意识，所以这里就需要多得实践（linux:解压命令，打开指定软件的命令，下载安装命令，卸载命令）</li><li>不会的要多请教（针对今天出现的问题是因为：1.程序写的不对 2.文件存放的位置不对（可能是，明天得再去看看））</li></ul><p>好啦，今天就写到这里。以前没有想过写日记，发现其实还是蛮有意思的，古人问：我日三省我身，高否？富否？帅否？我答：否 古人云：该睡觉啦<br>嗯～～～有道理，那就去做呗。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天又有点累，真是对自己无语了。&lt;br&gt;看到妹妹在家里吃着妈妈做的大餐，我却只能在学校啃着干面包，心里不平衡呀。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac将tensorflow的python环境配置到pycharm</title>
    <link href="http://yoursite.com/2018/01/17/Mac%E5%B0%86python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%88%B0pycharm/"/>
    <id>http://yoursite.com/2018/01/17/Mac将python环境配置到pycharm/</id>
    <published>2018-01-17T12:56:00.000Z</published>
    <updated>2018-01-17T13:29:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>当我们开始学习tensor flow的时候，环境有了，但是没有一个好的python运行环境会很难受，所以在这里推荐几个很受用的python运行环境。今天是第一次<br>接触pycharm，正如它所起的名字一样”迷人的python”,你会在见到它的第一眼就被深深得吸引。<br>以下是它的运行环境：</p><p><img src="/images/pycharm.png" alt=""><a id="more"></a></p><p>使用起来的感觉就和做前端开发对webstorm的感觉一样，快捷，功能强大（支持各种插件：terminal,git…）</p><p>在搭建好tensor flow运行环境之后我们想要让pycharm 拥有一样的tensor flow开发环境，那么需要做一个很简单的路径配置。大家先在<a href="https://www.tensorflow.org" target="_blank" rel="noopener">tersor flow</a><br>官网,按照教程搭建好自己的开发环境。此外安装破解版<a href="http://www.sdifen.com/phpstorm201623.html" target="_blank" rel="noopener">pycharm</a>.</p><p>接下来按照如下操作步骤配置自己的pycharm的tensor flow开发环境 </p><ol><li>终端下进入tersor flow运行脚本，输入<code>which python</code>之后，复制得到的python路径</li><li>打开pycharm–》preferences–》在左侧搜索栏中搜索project interpreter –》点击一个设置图标，点击”Add Local” –》将复制的python路<br>径输入进去–》点击OK</li></ol><p>大功告成，截图如下<br><img src="/images/project_interpreter.png" alt=""></p><p><img src="/images/printCutSet.png" alt=""></p><p><img src="/images/addLocal.png" alt=""></p><p><img src="/images/inputPath.png" alt=""></p><p><img src="/images/successOutput.png" alt=""></p><p>大家就可以开心得在一个优雅的编译器下尽情做tensor flow尝试啦 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当我们开始学习tensor flow的时候，环境有了，但是没有一个好的python运行环境会很难受，所以在这里推荐几个很受用的python运行环境。今天是第一次&lt;br&gt;接触pycharm，正如它所起的名字一样”迷人的python”,你会在见到它的第一眼就被深深得吸引。&lt;br&gt;以下是它的运行环境：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/pycharm.png&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="tensor flow" scheme="http://yoursite.com/categories/tensor-flow/"/>
    
    
      <category term="machine learning" scheme="http://yoursite.com/tags/machine-learning/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Python 中出现Non-ASCII character的解决办法</title>
    <link href="http://yoursite.com/2018/01/17/Python-%E4%B8%AD%E5%87%BA%E7%8E%B0Non-ASCII-character%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://yoursite.com/2018/01/17/Python-中出现Non-ASCII-character的解决办法/</id>
    <published>2018-01-17T02:17:25.000Z</published>
    <updated>2018-01-18T06:19:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>今天开始为深度学习的基础做准备，遇到python的一个编码问题：</p><p><img src="/images/Non-ASCII_Character.png" alt=""><a id="more"></a></p><p>python解释器脚本默认编码是ASCII码的形式，而你却输入了汉字，即将文件格式转换为utf-8的形式了，当下的解释器无法正确翻译这样的格式</p><p>解决办法：(在程序源文件<strong>开头</strong> 加上以下任意一个转码方式)</p><ul><li><p>#coding=uft-8</p></li><li><p>#_*<em>coding:UTF-8\</em>*_</p></li></ul><p>这样就可以愉快得输出想要的结果了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天开始为深度学习的基础做准备，遇到python的一个编码问题：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/Non-ASCII_Character.png&quot; alt=&quot;&quot;&gt;
    
    </summary>
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>很不错的景色</title>
    <link href="http://yoursite.com/2018/01/16/%E5%BE%88%E4%B8%8D%E9%94%99%E7%9A%84%E6%99%AF%E8%89%B2/"/>
    <id>http://yoursite.com/2018/01/16/很不错的景色/</id>
    <published>2018-01-16T14:54:31.000Z</published>
    <updated>2018-01-16T15:55:44.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="原来大家对老师是这样子的"><a href="#原来大家对老师是这样子的" class="headerlink" title="原来大家对老师是这样子的"></a>原来大家对老师是这样子的</h5><p>今天和实验室的学长学姐聊天，发现老师原来在他们心中是这样子的，听他们的描述似乎跟了他就要毁人生似的。<a id="more"></a></p><p>事情的起源是老师今天刚好有了空余时间，然后将我以及一个学长学姐叫过去谈话，给我详细讲了开题报告如何改进的方式方法，然后很正式得通知了我们明天<br>开始启动深度学习。当老师说出这句话时学长学姐一副不可理喻的表情，后来才知道所谓的启动就是自己去学习，因为在实验室目前为止还没有一个在深度学习<br>领域有一部分成果的同学。所以学长学姐就感觉老师很不可理喻，自己在实验室快两年时间了，就被老师强迫去写一些很无用的程序，平时既没有很好的技术指<br>导，也没有自己的提升空间，就是一个用自己时间给老师打工的木偶，最后自己学习到的东西针对找工作来说用处也不是很多。现在又要从零开始搞没有任何前<br>辈可以帮助的深度学习方面的知识，我从他们的内心看出了他们的疲惫。聊的时候他们极力劝我让我告诉想要保研到这个实验室的同学尽可能更换实验室，在这<br>里花费三年学到的东西真的是很少！</p><p>所以他们现在根本提不起兴趣来学习这些听起来很高大上的技术，就是抱怨老师的失败以及渴望有一个人能带领他们。</p><p>我听了感觉做为搞技术的老师，收到学生这样的评价真的是有点失败。</p><h5 id="其实我并不是很赞同"><a href="#其实我并不是很赞同" class="headerlink" title="其实我并不是很赞同"></a>其实我并不是很赞同</h5><p>虽然遗憾老师收到这样的评价，但是我个人觉得所谓现阶段的学习,以下几点很重要、</p><ul><li>自身努力（兴趣驱动）</li><li>好的学习环境（环境驱动）</li><li>好的学习方法（计算机学科：遇到问题—》解决问题—》学习总结）</li></ul><p>学长学姐的表现让我有点失望，虽然老师是没有太好的教育方式和技术支持，但是不能把所有造成自己现在各方面技术差的原因归咎于老师吧。我个人相信一个<br>法则和一个定律<strong>吸引力法则、墨菲定律</strong>，用在这里就是：只有自己去努力才能吸引到知识的到来，感觉自己越不会的知识越要相信自己一定可以搞懂，结合<br>吸引力法则就可以很好得提升自己啦。</p><p>然而学长学姐只有抱怨与负能量，我看见都有点累。确实，现在我对深度学习是真的一窍不通，什么线性回归看着就头疼，但是谁能想到一年前的我连输出素数<br>的一个十几行的小程序都不会写（大一和大二搞了副业，专业严重荒废），但是现在却可以在专业学习上小有体会，那么我相信我在接下来的时间里一定可以学<br>会深度学习在LSTM中的应用。</p><p>接下来就是图片时刻啦，很不错的景色呢，没想到这姑娘拍照水平还可以，越来越让我刮目相看了！当然我也越来越喜欢了，这里是美丽的海埂大坝：</p><p><img src="/images/2018-1-16-1.jpeg" alt=""></p><p><img src="/images/2018-1-16-2.jpg" alt=""></p><p><img src="/images/2018-1-16-3.jpeg" alt=""></p><p><img src="/images/2018-1-16-4.jpeg" alt=""></p><h6 id="Photoed-by-TangLoLo"><a href="#Photoed-by-TangLoLo" class="headerlink" title="Photoed by TangLoLo"></a>Photoed by TangLoLo</h6>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;原来大家对老师是这样子的&quot;&gt;&lt;a href=&quot;#原来大家对老师是这样子的&quot; class=&quot;headerlink&quot; title=&quot;原来大家对老师是这样子的&quot;&gt;&lt;/a&gt;原来大家对老师是这样子的&lt;/h5&gt;&lt;p&gt;今天和实验室的学长学姐聊天，发现老师原来在他们心中是这样子的，听他们的描述似乎跟了他就要毁人生似的。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>关于linux下不同脚本执行方式的区别</title>
    <link href="http://yoursite.com/2018/01/16/%E5%85%B3%E4%BA%8Elinux%E4%B8%8B%E4%B8%8D%E5%90%8C%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2018/01/16/关于linux下不同脚本执行方式的区别/</id>
    <published>2018-01-16T12:42:41.000Z</published>
    <updated>2018-01-16T13:10:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>Linux系统下常见的脚本执行方式有</p><ul><li>source script</li><li>sh script</li><li>./script<a id="more"></a>其实执行方式相差不多的是第二种和第三种<br><code>sh script</code>和<code>./script</code>执行过程中都会使用一个新的bash（linux系统默认的脚本，当然还有csh,sh,zsh,tcsh,ksh等)<br>来执行脚本中的命令，也就是说<strong>script是在子进程的bash内执行的，当然在子进程执行结束后，进程中的各项变量和操作是不会传回到父进程</strong></li></ul><p>然而用<code>source script</code>来执行，那么结果就不一样了，source命令使得script的执行方式在父进程中执行，因此各项操作会在原本的bash中生效，<br>这也就是为什么要使得写入~/.bashrc中的设置生效需要使用命令source</p><p>各位可以编写这样一个脚本来尝试一下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Program:</span></span><br><span class="line"><span class="comment">#       Users input 2 numbers,the program will input them.</span></span><br><span class="line"><span class="comment">#History:</span></span><br><span class="line"><span class="comment">#2018/01/16     Vigor   First Release</span></span><br><span class="line">PATH=/home/vigor/bin:/home/vigor/.<span class="built_in">local</span>/bin:/usr/<span class="built_in">local</span>/sbin:/usr/<span class="built_in">local</span>/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/<span class="built_in">local</span>/games:/snap/bin</span><br><span class="line"><span class="built_in">export</span> PATH</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"You need to input 2 numbers,i will cross them"</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"first number:"</span> firstnum</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"second number:"</span> secnum</span><br><span class="line"></span><br><span class="line">total=$((<span class="variable">$firstnum</span>*<span class="variable">$secnum</span>))</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">"\nThe result of <span class="variable">$firstnum</span> x <span class="variable">$secnum</span> is ==&gt; <span class="variable">$total</span>"</span></span><br></pre></td></tr></table></figure></p><p>将该脚本命名为sh03.sh，保存之后修改执行权限为所有用户可执行<br><code>chmod a+x sh03.sh</code></p><p>利用直接执行方式，即上面提到的后两种都可以来运行看看，<br>然后再用source执行脚本看看结果</p><p><img src="/images/sh03Cross.jpg" alt=""><br><img src="/images/sh03Source.jpg" alt=""></p><p>很明显能够看到在脚本中我们对变量total进行了赋值，但是利用<code>./script</code>执行之后在原来的脚本中total是空值，相反<br>利用<code>source</code>执行之后却可以在原来的脚本看到total的值。显然，利用source是在父进程中执行，而其他两种是在子进程中执行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux系统下常见的脚本执行方式有&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;source script&lt;/li&gt;
&lt;li&gt;sh script&lt;/li&gt;
&lt;li&gt;./script
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>你开心我就很开心</title>
    <link href="http://yoursite.com/2018/01/15/%E4%BD%A0%E5%BC%80%E5%BF%83%E6%88%91%E5%B0%B1%E5%BE%88%E5%BC%80%E5%BF%83/"/>
    <id>http://yoursite.com/2018/01/15/你开心我就很开心/</id>
    <published>2018-01-15T05:28:39.000Z</published>
    <updated>2018-01-15T06:03:53.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/小永永.jpg" alt=""></p><p>今天去街上和妹妹买了衣服，买了一件很不错的皮衣。我觉得穿上它站在你身边会很舒服。之后去<br>看了电影《无问西东》。<a id="more"></a>针对电影的逻辑搭配，我觉得导演剽窃了《云图》的创意，采用看似四个独立的不同年代的故事，但是每个故事都对<br>之后的故事中的世界或者人物的命运产生了一定的影响。相对于云图的隐晦表达，它很明显得表达出了要表达的内容：<br>一个人无论做什么都应该听从内心最真实的：勇敢、正义、无谓、同情。</p><p>其中让我感触最深的是黄晓明和章子怡的故事演出，爱情上：当全世界都在反对你，只有真正站在你身边的人才是最爱你的人。做为男生：一定要有理想抱负，<br>尽力为包容我们的世界作出值得有用的贡献！陈鹏（黄晓明饰）为了王敏佳（章子怡饰）愿意抛弃自己所热爱的事业，但是当他看到敏佳和好友在一起以为敏佳有了<br>托付，毅然投身到核物理研究之中，但是当敏佳因为背叛和错误坠入深渊，遭万人唾骂，陈鹏赶了回来，从死神边缘将敏佳拉了回来。我喜欢陈鹏纯粹，执着得去做自己<br>喜欢的事情，去追逐自己喜欢的人。他在任何时候都在听从自己内心最真实的声音，无问西东，为了你我可以抛弃全世界！</p><p>总之我从电影中看到了”立德立言，无问西东”。</p><p>晚上给你photoshop了一张可爱的皮卡丘，作图的时候一直在笑，结果有几个地方没有做好。发给你，感受到了你的开心。那个时候内心真的是心潮澎湃，感觉你看到图片<br>时候的笑声就回荡在我的耳边，开心之极，希望每天都能给你一个小惊喜，让你每天都能开开心心的，那个时候我绝对是最开心的！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/images/小永永.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天去街上和妹妹买了衣服，买了一件很不错的皮衣。我觉得穿上它站在你身边会很舒服。之后去&lt;br&gt;看了电影《无问西东》。
    
    </summary>
    
      <category term="日记" scheme="http://yoursite.com/categories/life/"/>
    
    
  </entry>
  
  <entry>
    <title>利用grep 配合数据流重定向查找处理大量文件查找问题</title>
    <link href="http://yoursite.com/2018/01/15/%E5%88%A9%E7%94%A8grep-%E9%85%8D%E5%90%88%E6%95%B0%E6%8D%AE%E6%B5%81%E9%87%8D%E5%AE%9A%E5%90%91%E6%9F%A5%E6%89%BE%E5%A4%84%E7%90%86%E5%A4%A7%E9%87%8F%E6%96%87%E4%BB%B6%E6%9F%A5%E6%89%BE%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/01/15/利用grep-配合数据流重定向查找处理大量文件查找问题/</id>
    <published>2018-01-15T02:45:24.000Z</published>
    <updated>2018-01-15T03:30:51.000Z</updated>
    
    <content type="html"><![CDATA[<h6 id="情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题"><a href="#情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题" class="headerlink" title="情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题"></a>情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题</h6><ul><li>目标：正确使用正则表达式</li><li>前提：了解数据流重定向，以及通过子命令$(command)来处理文件名的查找<a id="more"></a></li></ul><h6 id="利用正则表达式查找系统中含有某些特殊关键字的文件"><a href="#利用正则表达式查找系统中含有某些特殊关键字的文件" class="headerlink" title="利用正则表达式查找系统中含有某些特殊关键字的文件"></a>利用正则表达式查找系统中含有某些特殊关键字的文件</h6><p><code>grep &#39;\*&#39; /etc/*</code> 查找/etc／一级目录文件下查找含有*的文件内容</p><blockquote><p>‘\<em>‘是正则表达式,代表的是”\</em>“这个字符，而”*“如果不用”\“进行转义表示的是0，或者无穷多个前一个字符。<br> /etc/<em>中”\</em>“表示的是脚本bash通配符，代表文件名</p></blockquote><p> 如果想要查找连同完整的/etc 目录数据，就需要这样做</p><p> <code>grep &#39;\*&#39; $(find /etc -type f)</code></p><blockquote><p>$(command)表示子命令，即先执行find查找文件，再执行grep 命令从文件中找出含有*的字符串</p></blockquote><p> 如果查找的是整个系统的文件,可以</p><p> <code>grep &#39;\*&#39; $(find / -type f)</code> </p><p> 这个时候可能会出现系统文件过多，而命令列的长度有限制系统会爆出<br> <code>-bash: /bin/grep: Argument list too long</code>的问题</p><p> 那么可以利用数据流重定向中的管道命令以及xargs命令，让grep每次处理文件的数目少点</p><p> <code>find / -type f | xargs -n 10 grep &#39;\*&#39;</code></p><p> 讲整个系统文件利用xargs分成10个一组，每次grep命令仅处理10个文件</p><p> 关于xargs命令的详细使用方式可以参考<a href="http://man.linuxde.net/xargs" target="_blank" rel="noopener">xargs</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h6 id=&quot;情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题&quot;&gt;&lt;a href=&quot;#情境模拟-：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题&quot; class=&quot;headerlink&quot; title=&quot;情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题&quot;&gt;&lt;/a&gt;情境模拟 ：通过grep查找特殊字符串，并配合数据流重定向来处理大量的文件查找问题&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;目标：正确使用正则表达式&lt;/li&gt;
&lt;li&gt;前提：了解数据流重定向，以及通过子命令$(command)来处理文件名的查找
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>关于基础正则表达在linux下的应用</title>
    <link href="http://yoursite.com/2018/01/13/%E5%85%B3%E4%BA%8E%E5%9F%BA%E7%A1%80%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%9C%A8linux%E4%B8%8B%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2018/01/13/关于基础正则表达在linux下的应用/</id>
    <published>2018-01-13T15:52:44.000Z</published>
    <updated>2018-01-13T17:07:13.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="语系环境配置"><a href="#语系环境配置" class="headerlink" title="语系环境配置"></a>语系环境配置</h4><p>在Linux系统下，想要使用支持正则表达式的工具，比如awk,grep,sed,vi等，<a id="more"></a>那么就需要切换语系，因为<br>LANG=C 语系输出是a…zA…Z，这种形式是支持正则的字符取用规则，但是像zh_CN语系的输出则是aA.bB….zZ则不支持正则<br>的取用规则。</p><p>所以在使用工具前先确保当前脚本处于该语系配置环境，否则无法使用正则表达式。</p><p>利用命令</p><p><code>export LANG=C</code></p><p>保证当前语系环境。<br>同时执行命令</p><p><code>alias grep=&#39;grep --color=auto&#39;</code></p><p>alias命令是设置缩减命令，比如用alias ll=’ls -l’ 命令使得ll是ls -l的代替。<br>以上命令使得grep搜索到的字符串中的字符处于高亮</p><h4 id="正则表达式的基础练习"><a href="#正则表达式的基础练习" class="headerlink" title="正则表达式的基础练习"></a>正则表达式的基础练习</h4><p>以<code>grep</code>命令为例（在linux文件系统下文件处理都是以行为单位，建议大家找一个方便浏览的文本来在脚本中实践）</p><p><code>grep -n &#39;word&#39; /filename</code><br>查找filename文件中所有含有word的字符串（一行）,并显示行号</p><p><code>grep -in &#39;word&#39; /filename</code> 查找filname文件中所有含有word的字符串，并显示行号，且不区分word大小写，</p><p><code>grep -v &#39;word&#39; ／filename</code> 在filename中找出不含有word的字符串</p><p>以上貌似没有涉及到正则，大家不要急，只是为了让大家先熟悉一下grep命令。同时-i,-v,-n等参数都可以自由组合</p><h4 id="正则表达式的常用特殊符号（务必记住）"><a href="#正则表达式的常用特殊符号（务必记住）" class="headerlink" title="正则表达式的常用特殊符号（务必记住）"></a>正则表达式的常用特殊符号（务必记住）</h4><p>[:alnum:] 表示a..zA..Z0-9，即所有的字母数字</p><p>查找所有字母数字的字符串<code>grep -n [[:alnum:]] /filename</code><br>以下使用方式类似，需要将特殊符号放入”[]”中才能被识别</p><p>[:alpha:] 表示a..zA..Z，所有的字母</p><p>[:upper:] 表示A..Z，所有的大写字母</p><p>[:lower:] 表示a..z，所有的小写字母</p><p>[:digit:] 表示0-9，所有的数字</p><p>当然以上符号在应用的时候表示都为单个字符</p><h5 id="利用符号”-”来查找字符集合"><a href="#利用符号”-”来查找字符集合" class="headerlink" title="利用符号”[]”来查找字符集合"></a>利用符号”[]”来查找字符集合</h5><p><code>grep -n &#39;a[a-z]&#39; /filename</code> 符号”[]”中只能选择一个字符，即该命令 查找的是以a开头，a..z之间任意一个字符结尾的字符串，并显示行号</p><h5 id="利用符号”-”来查找字符串"><a href="#利用符号”-”来查找字符串" class="headerlink" title="利用符号”[^]”来查找字符串"></a>利用符号”[^]”来查找字符串</h5><p><code>grep -n &#39;[^a]aa&#39; /filename</code> 符号”[^]”代表的是不取^后的字符，该命令查找的是 不以a开头的,但其后跟有aa的字符串(baa之类)，并显示行号</p><h5 id="利用符号”-”来查找字符串-1"><a href="#利用符号”-”来查找字符串-1" class="headerlink" title="利用符号”.”来查找字符串"></a>利用符号”.”来查找字符串</h5><p><code>grep -n &#39;a..&#39; /filename</code> 符号”.”代表的是任意字符，该命令查找的是以a开头，其后跟有两个任意字符的字符串(abc、aaa,abb之类)，并显示行号</p><h5 id="利用符号”-”来查找字符串-2"><a href="#利用符号”-”来查找字符串-2" class="headerlink" title="利用符号”*”来查找字符串"></a>利用符号”*”来查找字符串</h5><p><code>grep -n &#39;aa* /filename</code> 符号”*”代表的是0个或者无穷多个的重复字符，该命令查找的是至少含有一个a的字符串，并显示行号</p><h5 id="利用符号”-”或者符号”-”查找字符串"><a href="#利用符号”-”或者符号”-”查找字符串" class="headerlink" title="利用符号”^”或者符号”$”查找字符串"></a>利用符号”^”或者符号”$”查找字符串</h5><p><code>grep -n &#39;^a&#39; /filename</code> 符号”^”单独拿出来则代表行首，与”[^]”不同，请注意区分，该命令查找的是以a开头的字符串。</p><p><code>grep -n &#39;a$&#39; /filename</code> 符号”$”表示行尾。该命令查找的是以a结尾的字符串。</p><h5 id="利用符号”-”查找范围字符串"><a href="#利用符号”-”查找范围字符串" class="headerlink" title="利用符号”{}”查找范围字符串"></a>利用符号”{}”查找范围字符串</h5><p>因为”{“ “}”在shell 中拥有特殊意义，所以使用的时候需要利用转义字符”\“来让命令解释器识别{}</p><p><code>grep -n &#39;a\{2,5\}&#39; /filename</code> 符号”{}”查找的是一个范围内的字符串，该命令查找的是2-5个连续a的字符串</p><blockquote><p>基于以上基本的正则操作，需要多加练习，多得进行组合操作才能够熟能生巧</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;语系环境配置&quot;&gt;&lt;a href=&quot;#语系环境配置&quot; class=&quot;headerlink&quot; title=&quot;语系环境配置&quot;&gt;&lt;/a&gt;语系环境配置&lt;/h4&gt;&lt;p&gt;在Linux系统下，想要使用支持正则表达式的工具，比如awk,grep,sed,vi等，
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
</feed>
